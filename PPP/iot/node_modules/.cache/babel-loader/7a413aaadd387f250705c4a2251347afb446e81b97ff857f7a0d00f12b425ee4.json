{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; // 데이터 레이블 플러그인\n\n// Chart.js 플러그인 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nChart.register(ChartDataLabels); // 데이터 레이블 플러그인\n\nfunction DataGraph() {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d'); // 캔버스 컨텍스트 얻기\n    const chart = new Chart(ctx, {\n      type: 'line',\n      // 라인 차트 설정\n      data: {\n        labels: ['10:00', '10:05', '10:10', '10:15', '10:20'],\n        // 시간대 데이터\n        datasets: [{\n          label: '충격 센서 (g)',\n          data: [0.2, 0.5, 1.0, 0.3, 0.4],\n          // 충격 데이터\n          borderColor: 'rgba(255, 99, 132, 1)',\n          // 선 색상\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          // 배경색\n          fill: true,\n          pointRadius: 6,\n          // 데이터 포인트 크기\n          pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n          pointHoverRadius: 8,\n          // 마우스 hover 시 데이터 포인트 크기\n          borderWidth: 2,\n          datalabels: {\n            color: 'rgba(255, 99, 132, 1)',\n            // 레이블 색상\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            align: 'top',\n            offset: 10\n          }\n        }, {\n          label: '온도 센서 (°C)',\n          data: [20, 21, 22, 21, 20],\n          // 온도 데이터\n          borderColor: 'rgba(54, 162, 235, 1)',\n          // 선 색상\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          // 배경색\n          fill: true,\n          pointRadius: 6,\n          pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n          pointHoverRadius: 8,\n          borderWidth: 2,\n          datalabels: {\n            color: 'rgba(54, 162, 235, 1)',\n            // 레이블 색상\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            align: 'top',\n            offset: 10\n          }\n        }]\n      },\n      options: {\n        responsive: true,\n        // 반응형 차트\n        plugins: {\n          legend: {\n            position: 'top',\n            // 범례 위치\n            labels: {\n              font: {\n                size: 16 // 범례 글씨 크기 조정\n              }\n            }\n          },\n          datalabels: {\n            color: 'black',\n            // 기본 데이터 레이블 색상\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              font: {\n                size: 14 // X축 글씨 크기\n              }\n            }\n          },\n          y: {\n            ticks: {\n              font: {\n                size: 14 // Y축 글씨 크기\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => chart.destroy(); // 컴포넌트가 unmount 될 때 차트 파괴\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"data-graph-container\",\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: chartRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = DataGraph;\nexport default DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","ChartDataLabels","jsxDEV","_jsxDEV","register","DataGraph","_s","chartRef","ctx","current","getContext","chart","type","data","labels","datasets","label","borderColor","backgroundColor","fill","pointRadius","pointBackgroundColor","pointHoverRadius","borderWidth","datalabels","color","font","weight","size","align","offset","options","responsive","plugins","legend","position","scales","x","ticks","y","destroy","className","children","ref","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';  // 데이터 레이블 플러그인\r\n\r\n// Chart.js 플러그인 등록\r\nChart.register(...registerables);\r\nChart.register(ChartDataLabels); // 데이터 레이블 플러그인\r\n\r\nfunction DataGraph() {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d'); // 캔버스 컨텍스트 얻기\r\n    const chart = new Chart(ctx, {\r\n      type: 'line', // 라인 차트 설정\r\n      data: {\r\n        labels: ['10:00', '10:05', '10:10', '10:15', '10:20'], // 시간대 데이터\r\n        datasets: [\r\n          {\r\n            label: '충격 센서 (g)',\r\n            data: [0.2, 0.5, 1.0, 0.3, 0.4], // 충격 데이터\r\n            borderColor: 'rgba(255, 99, 132, 1)',  // 선 색상\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)', // 배경색\r\n            fill: true,\r\n            pointRadius: 6,  // 데이터 포인트 크기\r\n            pointBackgroundColor: 'rgba(255, 99, 132, 1)',\r\n            pointHoverRadius: 8, // 마우스 hover 시 데이터 포인트 크기\r\n            borderWidth: 2,\r\n            datalabels: {\r\n              color: 'rgba(255, 99, 132, 1)',  // 레이블 색상\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n              align: 'top',\r\n              offset: 10,\r\n            },\r\n          },\r\n          {\r\n            label: '온도 센서 (°C)',\r\n            data: [20, 21, 22, 21, 20],  // 온도 데이터\r\n            borderColor: 'rgba(54, 162, 235, 1)',  // 선 색상\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',  // 배경색\r\n            fill: true,\r\n            pointRadius: 6,\r\n            pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n            pointHoverRadius: 8,\r\n            borderWidth: 2,\r\n            datalabels: {\r\n              color: 'rgba(54, 162, 235, 1)',  // 레이블 색상\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n              align: 'top',\r\n              offset: 10,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true, // 반응형 차트\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',  // 범례 위치\r\n            labels: {\r\n              font: {\r\n                size: 16, // 범례 글씨 크기 조정\r\n              },\r\n            },\r\n          },\r\n          datalabels: {\r\n            color: 'black',  // 기본 데이터 레이블 색상\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          x: {\r\n            ticks: {\r\n              font: {\r\n                size: 14,  // X축 글씨 크기\r\n              },\r\n            },\r\n          },\r\n          y: {\r\n            ticks: {\r\n              font: {\r\n                size: 14,  // Y축 글씨 크기\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return () => chart.destroy();  // 컴포넌트가 unmount 될 때 차트 파괴\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"data-graph-container\">\r\n      <canvas ref={chartRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DataGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}