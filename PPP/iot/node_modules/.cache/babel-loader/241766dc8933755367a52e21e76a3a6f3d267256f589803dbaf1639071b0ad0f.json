{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef } from 'react';\nimport { Chart, registerables } from 'chart.js';\nimport ChartDataLabels from 'chartjs-plugin-datalabels'; // 데이터 레이블 플러그인\nimport { Box, Typography, Paper } from '@mui/material'; // MUI 컴포넌트 사용\n\n// Chart.js 플러그인 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChart.register(...registerables);\nChart.register(ChartDataLabels); // 데이터 레이블 플러그인\n\nfunction DataGraph() {\n  _s();\n  const chartRef = useRef(null);\n  useEffect(() => {\n    const ctx = chartRef.current.getContext('2d');\n    const chart = new Chart(ctx, {\n      type: 'line',\n      data: {\n        labels: ['10:00', '10:05', '10:10', '10:15', '10:20'],\n        // 시간대 데이터\n        datasets: [{\n          label: '충격 센서 (g)',\n          data: [0.2, 0.5, 1.0, 0.3, 0.4],\n          // 충격 데이터 예시\n          borderColor: 'rgba(255, 99, 132, 1)',\n          backgroundColor: 'rgba(255, 99, 132, 0.2)',\n          fill: true,\n          pointRadius: 6,\n          // 데이터 포인트 크기 조정\n          pointBackgroundColor: 'rgba(255, 99, 132, 1)',\n          pointHoverRadius: 8,\n          // 마우스 hover 시 데이터 포인트 크기\n          borderWidth: 2,\n          datalabels: {\n            color: 'rgba(255, 99, 132, 1)',\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            align: 'top',\n            offset: 10\n          }\n        }, {\n          label: '온도 센서 (°C)',\n          data: [20, 21, 22, 21, 20],\n          // 온도 데이터 예시\n          borderColor: 'rgba(54, 162, 235, 1)',\n          backgroundColor: 'rgba(54, 162, 235, 0.2)',\n          fill: true,\n          pointRadius: 6,\n          pointBackgroundColor: 'rgba(54, 162, 235, 1)',\n          pointHoverRadius: 8,\n          borderWidth: 2,\n          datalabels: {\n            color: 'rgba(54, 162, 235, 1)',\n            font: {\n              weight: 'bold',\n              size: 14\n            },\n            align: 'top',\n            offset: 10\n          }\n        }]\n      },\n      options: {\n        responsive: true,\n        plugins: {\n          legend: {\n            position: 'top',\n            labels: {\n              font: {\n                size: 16 // 범례 글씨 크기 조정\n              }\n            }\n          },\n          datalabels: {\n            color: 'black',\n            // 데이터 레이블 색상 설정\n            font: {\n              size: 16,\n              weight: 'bold'\n            }\n          }\n        },\n        scales: {\n          x: {\n            ticks: {\n              font: {\n                size: 14 // x축 글씨 크기\n              }\n            }\n          },\n          y: {\n            ticks: {\n              font: {\n                size: 14 // y축 글씨 크기\n              }\n            }\n          }\n        }\n      }\n    });\n    return () => chart.destroy();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%',\n      padding: '20px',\n      display: 'flex',\n      flexDirection: 'column',\n      alignItems: 'center'\n    },\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      sx: {\n        padding: '20px',\n        width: '100%',\n        maxWidth: '900px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        gutterBottom: true,\n        sx: {\n          fontWeight: 'bold',\n          color: '#333'\n        },\n        children: \"\\uC13C\\uC11C \\uB370\\uC774\\uD130 \\uCC28\\uD2B8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          marginBottom: '20px'\n        },\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          sx: {\n            color: '#666',\n            fontSize: '14px'\n          },\n          children: \"\\uC774 \\uCC28\\uD2B8\\uB294 \\uCDA9\\uACA9 \\uC13C\\uC11C\\uC640 \\uC628\\uB3C4 \\uC13C\\uC11C\\uC758 \\uB370\\uC774\\uD130\\uB97C \\uC2DC\\uAC04\\uB300\\uBCC4\\uB85C \\uD45C\\uC2DC\\uD569\\uB2C8\\uB2E4.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"canvas\", {\n        ref: chartRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"X+1SfQQ6xefXNU27aQW843M7cTw=\");\n_c = DataGraph;\nexport default DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","useEffect","useRef","Chart","registerables","ChartDataLabels","Box","Typography","Paper","jsxDEV","_jsxDEV","register","DataGraph","_s","chartRef","ctx","current","getContext","chart","type","data","labels","datasets","label","borderColor","backgroundColor","fill","pointRadius","pointBackgroundColor","pointHoverRadius","borderWidth","datalabels","color","font","weight","size","align","offset","options","responsive","plugins","legend","position","scales","x","ticks","y","destroy","sx","width","padding","display","flexDirection","alignItems","children","elevation","maxWidth","textAlign","variant","gutterBottom","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","fontSize","ref","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport { Chart, registerables } from 'chart.js';\r\nimport ChartDataLabels from 'chartjs-plugin-datalabels';  // 데이터 레이블 플러그인\r\nimport { Box, Typography, Paper } from '@mui/material'; // MUI 컴포넌트 사용\r\n\r\n// Chart.js 플러그인 등록\r\nChart.register(...registerables);\r\nChart.register(ChartDataLabels); // 데이터 레이블 플러그인\r\n\r\nfunction DataGraph() {\r\n  const chartRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const ctx = chartRef.current.getContext('2d');\r\n    const chart = new Chart(ctx, {\r\n      type: 'line',\r\n      data: {\r\n        labels: ['10:00', '10:05', '10:10', '10:15', '10:20'], // 시간대 데이터\r\n        datasets: [\r\n          {\r\n            label: '충격 센서 (g)',\r\n            data: [0.2, 0.5, 1.0, 0.3, 0.4], // 충격 데이터 예시\r\n            borderColor: 'rgba(255, 99, 132, 1)',\r\n            backgroundColor: 'rgba(255, 99, 132, 0.2)',\r\n            fill: true,\r\n            pointRadius: 6,  // 데이터 포인트 크기 조정\r\n            pointBackgroundColor: 'rgba(255, 99, 132, 1)',\r\n            pointHoverRadius: 8, // 마우스 hover 시 데이터 포인트 크기\r\n            borderWidth: 2,\r\n            datalabels: {\r\n              color: 'rgba(255, 99, 132, 1)',\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n              align: 'top',\r\n              offset: 10,\r\n            },\r\n          },\r\n          {\r\n            label: '온도 센서 (°C)',\r\n            data: [20, 21, 22, 21, 20], // 온도 데이터 예시\r\n            borderColor: 'rgba(54, 162, 235, 1)',\r\n            backgroundColor: 'rgba(54, 162, 235, 0.2)',\r\n            fill: true,\r\n            pointRadius: 6,\r\n            pointBackgroundColor: 'rgba(54, 162, 235, 1)',\r\n            pointHoverRadius: 8,\r\n            borderWidth: 2,\r\n            datalabels: {\r\n              color: 'rgba(54, 162, 235, 1)',\r\n              font: {\r\n                weight: 'bold',\r\n                size: 14,\r\n              },\r\n              align: 'top',\r\n              offset: 10,\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      options: {\r\n        responsive: true,\r\n        plugins: {\r\n          legend: {\r\n            position: 'top',\r\n            labels: {\r\n              font: {\r\n                size: 16, // 범례 글씨 크기 조정\r\n              },\r\n            },\r\n          },\r\n          datalabels: {\r\n            color: 'black',  // 데이터 레이블 색상 설정\r\n            font: {\r\n              size: 16,\r\n              weight: 'bold',\r\n            },\r\n          },\r\n        },\r\n        scales: {\r\n          x: {\r\n            ticks: {\r\n              font: {\r\n                size: 14, // x축 글씨 크기\r\n              },\r\n            },\r\n          },\r\n          y: {\r\n            ticks: {\r\n              font: {\r\n                size: 14, // y축 글씨 크기\r\n              },\r\n            },\r\n          },\r\n        },\r\n      },\r\n    });\r\n\r\n    return () => chart.destroy();\r\n  }, []);\r\n\r\n  return (\r\n    <Box sx={{ width: '100%', padding: '20px', display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n      <Paper elevation={3} sx={{ padding: '20px', width: '100%', maxWidth: '900px', textAlign: 'center' }}>\r\n        <Typography variant=\"h6\" gutterBottom sx={{ fontWeight: 'bold', color: '#333' }}>\r\n          센서 데이터 차트\r\n        </Typography>\r\n        <Box sx={{ marginBottom: '20px' }}>\r\n          <Typography variant=\"body2\" sx={{ color: '#666', fontSize: '14px' }}>\r\n            이 차트는 충격 센서와 온도 센서의 데이터를 시간대별로 표시합니다.\r\n          </Typography>\r\n        </Box>\r\n        <canvas ref={chartRef} />\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DataGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}