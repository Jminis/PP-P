{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/CCTVPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVPage = () => {\n  const handleDoorLock = async () => {\n    try {\n      const response = await fetch('http://127.0.0.1:8080/cse-in/SafePackage/doorlock', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-M2M-Origin': 'SafePackage2',\n          'X-M2M-RI': 'req12345',\n          'X-M2M-RVI': '3'\n        },\n        body: JSON.stringify({\n          action: 'unlock'\n        })\n      });\n      if (response.ok) {\n        alert('Door unlocked successfully');\n      } else {\n        alert('Failed to unlock door');\n      }\n    } catch (error) {\n      console.error('Error:', error);\n      alert('An error occurred');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cctv-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cctv-stream\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CCTV Live Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: \"CCTV Video Stream (Implementation Pending)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"door-control\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDoorLock,\n        children: \"Unlock Door\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_c = CCTVPage;\nexport default CCTVPage;\nvar _c;\n$RefreshReg$(_c, \"CCTVPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CCTVPage","handleDoorLock","response","fetch","method","headers","body","JSON","stringify","action","ok","alert","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/CCTVPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CCTVPage = () => {\r\n  const handleDoorLock = async () => {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:8080/cse-in/SafePackage/doorlock', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          'X-M2M-Origin': 'SafePackage2',\r\n          'X-M2M-RI': 'req12345',\r\n          'X-M2M-RVI': '3',\r\n        },\r\n        body: JSON.stringify({ action: 'unlock' })\r\n      });\r\n\r\n      if (response.ok) {\r\n        alert('Door unlocked successfully');\r\n      } else {\r\n        alert('Failed to unlock door');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error:', error);\r\n      alert('An error occurred');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cctv-container\">\r\n      <div className=\"cctv-stream\">\r\n        <h2>CCTV Live Stream</h2>\r\n        {/* Placeholder for actual CCTV stream */}\r\n        <div className=\"video-placeholder\">\r\n          CCTV Video Stream (Implementation Pending)\r\n        </div>\r\n      </div>\r\n      <div className=\"door-control\">\r\n        <button onClick={handleDoorLock}>Unlock Door</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CCTVPage;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EACrB,MAAMC,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mDAAmD,EAAE;QAChFC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE,kBAAkB;UAClC,cAAc,EAAE,cAAc;UAC9B,UAAU,EAAE,UAAU;UACtB,WAAW,EAAE;QACf,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,MAAM,EAAE;QAAS,CAAC;MAC3C,CAAC,CAAC;MAEF,IAAIP,QAAQ,CAACQ,EAAE,EAAE;QACfC,KAAK,CAAC,4BAA4B,CAAC;MACrC,CAAC,MAAM;QACLA,KAAK,CAAC,uBAAuB,CAAC;MAChC;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;MAC9BD,KAAK,CAAC,mBAAmB,CAAC;IAC5B;EACF,CAAC;EAED,oBACEZ,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC7BhB,OAAA;MAAKe,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1BhB,OAAA;QAAAgB,QAAA,EAAI;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAEzBpB,OAAA;QAAKe,SAAS,EAAC,mBAAmB;QAAAC,QAAA,EAAC;MAEnC;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNpB,OAAA;MAAKe,SAAS,EAAC,cAAc;MAAAC,QAAA,eAC3BhB,OAAA;QAAQqB,OAAO,EAAEnB,cAAe;QAAAc,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACE,EAAA,GAvCIrB,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}