{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/CCTVPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Typography, CircularProgress } from '@mui/material'; // Material-UI 컴포넌트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVPage = () => {\n  _s();\n  const [lockTimeout, setLockTimeout] = useState(null); // CCTV Live Stream\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지 상태 저장\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [recordings, setRecordings] = useState([]); // 녹화본 목록 상태\n  const [selectedRecording, setSelectedRecording] = useState(null); // 선택된 녹화본 상태\n\n  // 가상 녹화본 데이터\n  const virtualRecordings = Array.from({\n    length: 10\n  }, (_, index) => ({\n    id: index + 1,\n    fileName: `recording_${1}.mp4`,\n    date: new Date(),\n    imageUrl: `/images/recording_${1}.jpg` // 가상의 이미지 파일 경로\n  }));\n  const handleRecordingSelect = recording => {\n    setSelectedRecording(recording); // 선택된 녹화본 설정\n  };\n  const handleApproveRecording = () => {\n    // 녹화본 승인 처리\n    if (selectedRecording) {\n      setResponseMessage(`Recording ${selectedRecording.id} has been approved.`);\n    }\n  };\n  const sendCommand = async command => {\n    try {\n      setLoading(true); // 요청 시작 시 로딩 상태 활성화\n      const timestamp = new Date().toISOString();\n      const commandData = {\n        \"m2m:cin\": {\n          \"rn\": `command_${timestamp.replace(/[:.]/g, '_')}`,\n          \"con\": {\n            \"command\": command,\n            \"timestamp\": timestamp\n          }\n        }\n      };\n\n      // Flask 서버로 POST 요청\n      const response = await fetch('http://localhost:5000/send-command', {\n        // Flask 서버 주소\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commandData)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${errorText}`);\n      }\n\n      // 응답 JSON 처리\n      const data = await response.json();\n      setResponseMessage(data.message || \"Command executed successfully\");\n      alert(`${command} command sent successfully: ${data.message}`);\n    } catch (error) {\n      console.error('Error sending command:', error);\n      setResponseMessage(`Error: ${error.message}`);\n      alert(`An error occurred: ${error.message}`);\n    } finally {\n      setLoading(false); // 요청 완료 후 로딩 상태 비활성화\n    }\n  };\n  const handleDoorLock = () => {\n    sendCommand('unlocked');\n\n    // 기존 타임아웃 클리어\n    if (lockTimeout) {\n      clearTimeout(lockTimeout);\n    }\n\n    // 1분 후 도어 잠금 명령\n    const newTimeout = setTimeout(() => {\n      sendCommand('locked');\n      setLockTimeout(null);\n    }, 600); // 1분 = 60000ms\n\n    setLockTimeout(newTimeout);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cctv-container\",\n    style: {\n      display: 'flex',\n      flexDirection: 'column',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        flex: 1\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          height: '50%',\n          padding: 3,\n          backgroundColor: '#f5f5f5',\n          borderRadius: 2,\n          boxShadow: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          align: \"center\",\n          gutterBottom: true,\n          sx: {\n            fontFamily: \"'Sour Gummy', cursive\",\n            marginTop: '20px'\n          },\n          children: \"CCTV Live Stream\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"video-placeholder\",\n          style: {\n            height: 'calc(100% - 50px)',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center'\n          },\n          children: selectedRecording ? /*#__PURE__*/_jsxDEV(\"video\", {\n            width: \"100%\",\n            height: \"100%\",\n            controls: true,\n            autoPlay: true,\n            loop: true,\n            children: [/*#__PURE__*/_jsxDEV(\"source\", {\n              src: `/videos/${selectedRecording.fileName}`,\n              type: \"video/mp4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), \"Your browser does not support the video tag.\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"textSecondary\",\n            children: \"No recording selected\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          width: '50%',\n          height: '50%',\n          padding: 3,\n          backgroundColor: \"#f5f5f5\",\n          borderRadius: 2,\n          boxShadow: 3\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          sx: {\n            fontFamily: \"'Sour Gummy', cursive\",\n            marginBottom: 2\n          },\n          children: \"Select a Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"recordings-list\",\n          style: {\n            display: 'flex',\n            flexWrap: 'wrap',\n            justifyContent: 'space-between'\n          },\n          children: virtualRecordings.length > 0 ? virtualRecordings.map(recording => /*#__PURE__*/_jsxDEV(\"div\", {\n            onClick: () => handleRecordingSelect(recording),\n            style: {\n              width: '30%',\n              // 한 줄에 3개씩 배치\n              marginBottom: '20px',\n              cursor: 'pointer',\n              textAlign: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: recording.imageUrl,\n              alt: `Recording ${recording.id}`,\n              style: {\n                width: '100%',\n                height: '150px',\n                objectFit: 'cover',\n                borderRadius: '8px'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              sx: {\n                marginTop: 1\n              },\n              children: `Recording ${recording.id}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              children: new Date(recording.date).toLocaleDateString()\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 19\n            }, this)]\n          }, recording.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 17\n          }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            color: \"textSecondary\",\n            children: \"No recordings available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"door-control\",\n      style: {\n        padding: '0px',\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        color: \"primary\",\n        onClick: handleDoorLock,\n        size: \"large\",\n        fullWidth: true,\n        sx: {\n          backgroundColor: '#d32f2f',\n          // 빨간색 배경\n          '&:hover': {\n            backgroundColor: '#c62828' // 호버 시 빨간색\n          },\n          padding: '12px',\n          // 버튼 안쪽 여백\n          fontSize: '18px',\n          // 글자 크기\n          fontWeight: '600',\n          // 글자 두께\n          fontFamily: \"'Sour Gummy', cursive\"\n        },\n        disabled: loading // 로딩 중일 때 버튼 비활성화\n        ,\n        children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n          size: 24,\n          sx: {\n            color: 'white'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 22\n        }, this) : 'Unlock Door'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this), responseMessage && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        color: \"textSecondary\",\n        sx: {\n          marginTop: '100px'\n        },\n        children: responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 90,\n    columnNumber: 5\n  }, this);\n};\n_s(CCTVPage, \"kuSu+ZQp3Vbu7C5LZpR8EgtgLhg=\");\n_c = CCTVPage;\nexport default CCTVPage;\nvar _c;\n$RefreshReg$(_c, \"CCTVPage\");","map":{"version":3,"names":["React","useState","Box","Button","Typography","CircularProgress","jsxDEV","_jsxDEV","CCTVPage","_s","lockTimeout","setLockTimeout","responseMessage","setResponseMessage","loading","setLoading","recordings","setRecordings","selectedRecording","setSelectedRecording","virtualRecordings","Array","from","length","_","index","id","fileName","date","Date","imageUrl","handleRecordingSelect","recording","handleApproveRecording","sendCommand","command","timestamp","toISOString","commandData","replace","response","fetch","method","headers","body","JSON","stringify","ok","errorText","text","Error","data","json","message","alert","error","console","handleDoorLock","clearTimeout","newTimeout","setTimeout","className","style","display","flexDirection","height","children","justifyContent","flex","sx","width","padding","backgroundColor","borderRadius","boxShadow","variant","align","gutterBottom","fontFamily","marginTop","_jsxFileName","lineNumber","columnNumber","alignItems","controls","autoPlay","loop","src","type","color","marginBottom","flexWrap","map","onClick","cursor","textAlign","alt","objectFit","toLocaleDateString","size","fullWidth","fontSize","fontWeight","disabled","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/CCTVPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { Box, Button, Typography, CircularProgress } from '@mui/material'; // Material-UI 컴포넌트 추가\r\n\r\nconst CCTVPage = () => {\r\n  const [lockTimeout, setLockTimeout] = useState(null); // CCTV Live Stream\r\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지 상태 저장\r\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\r\n  const [recordings, setRecordings] = useState([]); // 녹화본 목록 상태\r\n  const [selectedRecording, setSelectedRecording] = useState(null); // 선택된 녹화본 상태\r\n\r\n  // 가상 녹화본 데이터\r\n  const virtualRecordings = Array.from({ length: 10 }, (_, index) => ({\r\n    id: index + 1,\r\n    fileName: `recording_${1}.mp4`,\r\n    date: new Date(),\r\n    imageUrl: `/images/recording_${1}.jpg`, // 가상의 이미지 파일 경로\r\n  }));\r\n\r\n  const handleRecordingSelect = (recording) => {\r\n    setSelectedRecording(recording); // 선택된 녹화본 설정\r\n  };\r\n\r\n  const handleApproveRecording = () => {\r\n    // 녹화본 승인 처리\r\n    if (selectedRecording) {\r\n      setResponseMessage(`Recording ${selectedRecording.id} has been approved.`);\r\n    }\r\n  };\r\n\r\n  const sendCommand = async (command) => {\r\n    try {\r\n      setLoading(true); // 요청 시작 시 로딩 상태 활성화\r\n      const timestamp = new Date().toISOString();\r\n\r\n      const commandData = {\r\n        \"m2m:cin\": {\r\n          \"rn\": `command_${timestamp.replace(/[:.]/g, '_')}`,\r\n          \"con\": {\r\n            \"command\": command,\r\n            \"timestamp\": timestamp,\r\n          },\r\n        },\r\n      };\r\n\r\n      // Flask 서버로 POST 요청\r\n      const response = await fetch('http://localhost:5000/send-command', { // Flask 서버 주소\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commandData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${errorText}`);\r\n      }\r\n\r\n      // 응답 JSON 처리\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || \"Command executed successfully\");\r\n      alert(`${command} command sent successfully: ${data.message}`);\r\n    } catch (error) {\r\n      console.error('Error sending command:', error);\r\n      setResponseMessage(`Error: ${error.message}`);\r\n      alert(`An error occurred: ${error.message}`);\r\n    } finally {\r\n      setLoading(false); // 요청 완료 후 로딩 상태 비활성화\r\n    }\r\n  };\r\n\r\n  const handleDoorLock = () => {\r\n    sendCommand('unlocked');\r\n\r\n    // 기존 타임아웃 클리어\r\n    if (lockTimeout) {\r\n      clearTimeout(lockTimeout);\r\n    }\r\n\r\n    // 1분 후 도어 잠금 명령\r\n    const newTimeout = setTimeout(() => {\r\n      sendCommand('locked');\r\n      setLockTimeout(null);\r\n    }, 600); // 1분 = 60000ms\r\n\r\n    setLockTimeout(newTimeout);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cctv-container\" style={{ display: 'flex', flexDirection: 'column', height: '100vh' }}>\r\n      {/* 상단 섹션: CCTV Live Stream과 녹화본 선택 */}\r\n      <div style={{ display: 'flex', justifyContent: 'space-between', flex: 1 }}>\r\n        {/* 왼쪽 섹션: CCTV Live Stream */}\r\n        <Box sx={{ width: '50%', height: '50%', padding: 3, backgroundColor: '#f5f5f5', borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h5\" align=\"center\" gutterBottom sx={{ fontFamily: \"'Sour Gummy', cursive\", marginTop: '20px' }}>\r\n            CCTV Live Stream\r\n          </Typography>\r\n          <div className=\"video-placeholder\" style={{ height: 'calc(100% - 50px)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n            {/* 비디오 파일을 public/videos 폴더에서 참조 */}\r\n            {selectedRecording ? (\r\n              <video width=\"100%\" height=\"100%\" controls autoPlay loop>\r\n                <source src={`/videos/${selectedRecording.fileName}`} type=\"video/mp4\" />\r\n                Your browser does not support the video tag.\r\n              </video>\r\n            ) : (\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                No recording selected\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Box>\r\n\r\n        {/* 오른쪽 섹션: 녹화본 선택 */}\r\n        <Box sx={{ width: '50%', height: '50%', padding: 3, backgroundColor: \"#f5f5f5\", borderRadius: 2, boxShadow: 3 }}>\r\n          <Typography variant=\"h6\" align=\"center\" sx={{ fontFamily: \"'Sour Gummy', cursive\", marginBottom: 2 }}>\r\n            Select a Recording\r\n          </Typography>\r\n          <div className=\"recordings-list\" style={{ display: 'flex', flexWrap: 'wrap', justifyContent: 'space-between' }}>\r\n            {virtualRecordings.length > 0 ? (\r\n              virtualRecordings.map((recording) => (\r\n                <div\r\n                  key={recording.id}\r\n                  onClick={() => handleRecordingSelect(recording)}\r\n                  style={{\r\n                    width: '30%', // 한 줄에 3개씩 배치\r\n                    marginBottom: '20px',\r\n                    cursor: 'pointer',\r\n                    textAlign: 'center',\r\n                  }}\r\n                >\r\n                  <img\r\n                    src={recording.imageUrl}\r\n                    alt={`Recording ${recording.id}`}\r\n                    style={{\r\n                      width: '100%',\r\n                      height: '150px',\r\n                      objectFit: 'cover',\r\n                      borderRadius: '8px',\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"body2\" color=\"textSecondary\" sx={{ marginTop: 1 }}>\r\n                    {`Recording ${recording.id}`}\r\n                  </Typography>\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {new Date(recording.date).toLocaleDateString()}\r\n                  </Typography>\r\n                </div>\r\n              ))\r\n            ) : (\r\n              <Typography variant=\"body1\" color=\"textSecondary\">\r\n                No recordings available\r\n              </Typography>\r\n            )}\r\n          </div>\r\n        </Box>\r\n      </div>\r\n\r\n      {/* 하단 섹션: Door Control */}\r\n      <div className=\"door-control\" style={{ padding: '0px', textAlign: 'center' }}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          onClick={handleDoorLock}\r\n          size=\"large\"\r\n          fullWidth\r\n          sx={{\r\n            backgroundColor: '#d32f2f', // 빨간색 배경\r\n            '&:hover': {\r\n              backgroundColor: '#c62828', // 호버 시 빨간색\r\n            },\r\n            padding: '12px', // 버튼 안쪽 여백\r\n            fontSize: '18px', // 글자 크기\r\n            fontWeight: '600', // 글자 두께\r\n            fontFamily: \"'Sour Gummy', cursive\",\r\n          }}\r\n          disabled={loading} // 로딩 중일 때 버튼 비활성화\r\n        >\r\n          {loading ? <CircularProgress size={24} sx={{ color: 'white' }} /> : 'Unlock Door'}\r\n        </Button>\r\n        {responseMessage && (\r\n          <Typography variant=\"body1\" color=\"textSecondary\" sx={{ marginTop: '100px' }}>\r\n            {responseMessage}\r\n          </Typography>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CCTVPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}