{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/CCTVPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Button, Typography, CircularProgress, Box } from '@mui/material'; // Material-UI 컴포넌트 추가\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVPage = () => {\n  _s();\n  const [lockTimeout, setLockTimeout] = useState(null); // CCTV Live Stream\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지 상태 저장\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\n  const [recordings, setRecordings] = useState([]); // 녹화본 목록 상태\n  const [selectedRecording, setSelectedRecording] = useState(null); // 선택된 녹화본 상태\n\n  // 녹화본 목록을 서버에서 받아오는 함수\n  const fetchRecordings = async () => {\n    try {\n      const response = await fetch('http://localhost:5000/recordings'); // 서버 주소\n      if (!response.ok) {\n        throw new Error('Failed to fetch recordings');\n      }\n      const data = await response.json();\n      setRecordings(data.recordings); // 녹화본 목록 설정\n    } catch (error) {\n      console.error('Error fetching recordings:', error);\n    }\n  };\n\n  // 컴포넌트 마운트 시 녹화본 목록을 가져옴\n  useEffect(() => {\n    fetchRecordings();\n  }, []);\n  const sendCommand = async command => {\n    try {\n      setLoading(true); // 요청 시작 시 로딩 상태 활성화\n      const timestamp = new Date().toISOString();\n      const commandData = {\n        \"m2m:cin\": {\n          \"rn\": `command_${timestamp.replace(/[:.]/g, '_')}`,\n          \"con\": {\n            \"command\": command,\n            \"timestamp\": timestamp\n          }\n        }\n      };\n\n      // Flask 서버로 POST 요청\n      const response = await fetch('http://localhost:5000/send-command', {\n        // Flask 서버 주소\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commandData)\n      });\n      if (!response.ok) {\n        const errorText = await response.text();\n        throw new Error(`Server error: ${errorText}`);\n      }\n\n      // 응답 JSON 처리\n      const data = await response.json();\n      setResponseMessage(data.message || \"Command executed successfully\");\n      alert(`${command} command sent successfully: ${data.message}`);\n    } catch (error) {\n      console.error('Error sending command:', error);\n      setResponseMessage(`Error: ${error.message}`);\n      alert(`An error occurred: ${error.message}`);\n    } finally {\n      setLoading(false); // 요청 완료 후 로딩 상태 비활성화\n    }\n  };\n  const handleDoorLock = () => {\n    sendCommand('unlocked');\n\n    // 기존 타임아웃 클리어\n    if (lockTimeout) {\n      clearTimeout(lockTimeout);\n    }\n\n    // 1분 후 도어 잠금 명령\n    const newTimeout = setTimeout(() => {\n      sendCommand('locked');\n      setLockTimeout(null);\n    }, 600); // 1분 = 60000ms\n\n    setLockTimeout(newTimeout);\n  };\n  const handleRecordingSelect = recording => {\n    setSelectedRecording(recording); // 선택된 녹화본 설정\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cctv-container\",\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      height: '100vh'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cctv-stream\",\n      style: {\n        width: '50%',\n        height: '50%'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        align: \"center\",\n        gutterBottom: true,\n        sx: {\n          fontFamily: \"'Sour Gummy', cursive\",\n          marginTop: '20px'\n        },\n        children: \"CCTV Live Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        style: {\n          height: 'calc(100% - 50px)',\n          display: 'flex',\n          justifyContent: 'center',\n          alignItems: 'center'\n        },\n        children: /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          height: \"100%\",\n          controls: true,\n          autoPlay: true,\n          loop: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: \"/videos/your-video.mp4\",\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        width: '50%',\n        padding: 2,\n        backgroundColor: \"#f5f5f5\",\n        borderRadius: 2,\n        boxShadow: 3,\n        overflowY: 'auto'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        align: \"center\",\n        sx: {\n          fontFamily: \"'Sour Gummy', cursive\",\n          marginBottom: 2\n        },\n        children: \"Select a Recording\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"recordings-list\",\n        style: {\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center'\n        },\n        children: recordings.length > 0 ? recordings.map((recording, index) => /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: () => handleRecordingSelect(recording),\n          sx: {\n            marginBottom: 1,\n            backgroundColor: '#1976d2',\n            '&:hover': {\n              backgroundColor: '#1565c0'\n            }\n          },\n          children: `Recording ${index + 1} - ${new Date(recording.date).toLocaleDateString()}`\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this)) : /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          children: \"No recordings available\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), selectedRecording && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"selected-recording\",\n        style: {\n          marginTop: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          align: \"center\",\n          sx: {\n            fontFamily: \"'Sour Gummy', cursive\",\n            marginBottom: 2\n          },\n          children: \"Playing Selected Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n          width: \"100%\",\n          controls: true,\n          autoPlay: true,\n          children: [/*#__PURE__*/_jsxDEV(\"source\", {\n            src: `/videos/${selectedRecording.fileName}`,\n            type: \"video/mp4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this), \"Your browser does not support the video tag.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), selectedRecording && /*#__PURE__*/_jsxDEV(Box, {\n        sx: {\n          textAlign: 'center',\n          marginTop: 2\n        },\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"success\",\n          size: \"large\",\n          onClick: () => alert('Recording approved'),\n          sx: {\n            fontSize: '16px',\n            padding: '12px 20px',\n            backgroundColor: '#388e3c',\n            '&:hover': {\n              backgroundColor: '#2e7d32'\n            }\n          },\n          children: \"Approve Recording\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"door-control\",\n        style: {\n          marginTop: '20px',\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleDoorLock,\n          size: \"large\",\n          fullWidth: true,\n          sx: {\n            backgroundColor: '#d32f2f',\n            // 빨간색 배경\n            '&:hover': {\n              backgroundColor: '#c62828' // 호버 시 빨간색\n            },\n            padding: '12px',\n            // 버튼 안쪽 여백\n            fontSize: '18px',\n            // 글자 크기\n            fontWeight: '600',\n            // 글자 두께\n            fontFamily: \"'Sour Gummy', cursive\"\n          },\n          disabled: loading // 로딩 중일 때 버튼 비활성화\n          ,\n          children: loading ? /*#__PURE__*/_jsxDEV(CircularProgress, {\n            size: 24,\n            sx: {\n              color: 'white'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 24\n          }, this) : 'Unlock Door'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this), responseMessage && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          color: \"textSecondary\",\n          sx: {\n            marginTop: '20px'\n          },\n          children: responseMessage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CCTVPage, \"jhLFUBuY6VHPAqpsy58iJB2NqP8=\");\n_c = CCTVPage;\nexport default CCTVPage;\nvar _c;\n$RefreshReg$(_c, \"CCTVPage\");","map":{"version":3,"names":["React","useState","useEffect","Button","Typography","CircularProgress","Box","jsxDEV","_jsxDEV","CCTVPage","_s","lockTimeout","setLockTimeout","responseMessage","setResponseMessage","loading","setLoading","recordings","setRecordings","selectedRecording","setSelectedRecording","fetchRecordings","response","fetch","ok","Error","data","json","error","console","sendCommand","command","timestamp","Date","toISOString","commandData","replace","method","headers","body","JSON","stringify","errorText","text","message","alert","handleDoorLock","clearTimeout","newTimeout","setTimeout","handleRecordingSelect","recording","className","style","display","justifyContent","height","children","width","variant","align","gutterBottom","sx","fontFamily","marginTop","fileName","_jsxFileName","lineNumber","columnNumber","alignItems","controls","autoPlay","loop","src","type","padding","backgroundColor","borderRadius","boxShadow","overflowY","marginBottom","flexDirection","length","map","index","onClick","date","toLocaleDateString","color","textAlign","size","fontSize","fullWidth","fontWeight","disabled","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/CCTVPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Button, Typography, CircularProgress, Box } from '@mui/material'; // Material-UI 컴포넌트 추가\r\n\r\nconst CCTVPage = () => {\r\n  const [lockTimeout, setLockTimeout] = useState(null); // CCTV Live Stream\r\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지 상태 저장\r\n  const [loading, setLoading] = useState(false); // 로딩 상태 추가\r\n  const [recordings, setRecordings] = useState([]); // 녹화본 목록 상태\r\n  const [selectedRecording, setSelectedRecording] = useState(null); // 선택된 녹화본 상태\r\n\r\n  // 녹화본 목록을 서버에서 받아오는 함수\r\n  const fetchRecordings = async () => {\r\n    try {\r\n      const response = await fetch('http://localhost:5000/recordings'); // 서버 주소\r\n      if (!response.ok) {\r\n        throw new Error('Failed to fetch recordings');\r\n      }\r\n      const data = await response.json();\r\n      setRecordings(data.recordings); // 녹화본 목록 설정\r\n    } catch (error) {\r\n      console.error('Error fetching recordings:', error);\r\n    }\r\n  };\r\n\r\n  // 컴포넌트 마운트 시 녹화본 목록을 가져옴\r\n  useEffect(() => {\r\n    fetchRecordings();\r\n  }, []);\r\n\r\n  const sendCommand = async (command) => {\r\n    try {\r\n      setLoading(true); // 요청 시작 시 로딩 상태 활성화\r\n      const timestamp = new Date().toISOString();\r\n\r\n      const commandData = {\r\n        \"m2m:cin\": {\r\n          \"rn\": `command_${timestamp.replace(/[:.]/g, '_')}`,\r\n          \"con\": {\r\n            \"command\": command,\r\n            \"timestamp\": timestamp,\r\n          },\r\n        },\r\n      };\r\n\r\n      // Flask 서버로 POST 요청\r\n      const response = await fetch('http://localhost:5000/send-command', { // Flask 서버 주소\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commandData),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errorText = await response.text();\r\n        throw new Error(`Server error: ${errorText}`);\r\n      }\r\n\r\n      // 응답 JSON 처리\r\n      const data = await response.json();\r\n      setResponseMessage(data.message || \"Command executed successfully\");\r\n      alert(`${command} command sent successfully: ${data.message}`);\r\n    } catch (error) {\r\n      console.error('Error sending command:', error);\r\n      setResponseMessage(`Error: ${error.message}`);\r\n      alert(`An error occurred: ${error.message}`);\r\n    } finally {\r\n      setLoading(false); // 요청 완료 후 로딩 상태 비활성화\r\n    }\r\n  };\r\n\r\n  const handleDoorLock = () => {\r\n    sendCommand('unlocked');\r\n\r\n    // 기존 타임아웃 클리어\r\n    if (lockTimeout) {\r\n      clearTimeout(lockTimeout);\r\n    }\r\n\r\n    // 1분 후 도어 잠금 명령\r\n    const newTimeout = setTimeout(() => {\r\n      sendCommand('locked');\r\n      setLockTimeout(null);\r\n    }, 600); // 1분 = 60000ms\r\n\r\n    setLockTimeout(newTimeout);\r\n  };\r\n\r\n  const handleRecordingSelect = (recording) => {\r\n    setSelectedRecording(recording); // 선택된 녹화본 설정\r\n  };\r\n\r\n  return (\r\n    <div className=\"cctv-container\" style={{ display: 'flex', justifyContent: 'space-between', height: '100vh' }}>\r\n      {/* 왼쪽 섹션: CCTV Live Stream */}\r\n      <div className=\"cctv-stream\" style={{ width: '50%', height: '50%' }}>\r\n        <Typography variant=\"h5\" align=\"center\" gutterBottom sx={{ fontFamily: \"'Sour Gummy', cursive\", marginTop: '20px' }}>\r\n          CCTV Live Stream\r\n        </Typography>\r\n        <div className=\"video-placeholder\" style={{ height: 'calc(100% - 50px)', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n          {/* 비디오 파일을 public/videos 폴더에서 참조 */}\r\n          <video width=\"100%\" height=\"100%\" controls autoPlay loop>\r\n            <source src=\"/videos/your-video.mp4\" type=\"video/mp4\" />\r\n            Your browser does not support the video tag.\r\n          </video>\r\n        </div>\r\n      </div>\r\n\r\n      {/* 오른쪽 섹션: 녹화본 선택 및 도어 잠금 버튼 */}\r\n      <Box\r\n        sx={{\r\n          width: '50%',\r\n          padding: 2,\r\n          backgroundColor: \"#f5f5f5\",\r\n          borderRadius: 2,\r\n          boxShadow: 3,\r\n          overflowY: 'auto',\r\n        }}\r\n      >\r\n        <Typography variant=\"h6\" align=\"center\" sx={{ fontFamily: \"'Sour Gummy', cursive\", marginBottom: 2 }}>\r\n          Select a Recording\r\n        </Typography>\r\n        <div className=\"recordings-list\" style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\r\n          {recordings.length > 0 ? (\r\n            recordings.map((recording, index) => (\r\n              <Button\r\n                key={index}\r\n                variant=\"contained\"\r\n                onClick={() => handleRecordingSelect(recording)}\r\n                sx={{\r\n                  marginBottom: 1,\r\n                  backgroundColor: '#1976d2',\r\n                  '&:hover': {\r\n                    backgroundColor: '#1565c0',\r\n                  },\r\n                }}\r\n              >\r\n                {`Recording ${index + 1} - ${new Date(recording.date).toLocaleDateString()}`}\r\n              </Button>\r\n            ))\r\n          ) : (\r\n            <Typography variant=\"body1\" color=\"textSecondary\">\r\n              No recordings available\r\n            </Typography>\r\n          )}\r\n        </div>\r\n\r\n        {/* 선택된 녹화본 재생 */}\r\n        {selectedRecording && (\r\n          <div className=\"selected-recording\" style={{ marginTop: '20px' }}>\r\n            <Typography variant=\"h6\" align=\"center\" sx={{ fontFamily: \"'Sour Gummy', cursive\", marginBottom: 2 }}>\r\n              Playing Selected Recording\r\n            </Typography>\r\n            <video width=\"100%\" controls autoPlay>\r\n              <source src={`/videos/${selectedRecording.fileName}`} type=\"video/mp4\" />\r\n              Your browser does not support the video tag.\r\n            </video>\r\n          </div>\r\n        )}\r\n\r\n        {/* 승인 버튼 */}\r\n        {selectedRecording && (\r\n          <Box sx={{ textAlign: 'center', marginTop: 2 }}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"success\"\r\n              size=\"large\"\r\n              onClick={() => alert('Recording approved')}\r\n              sx={{\r\n                fontSize: '16px',\r\n                padding: '12px 20px',\r\n                backgroundColor: '#388e3c',\r\n                '&:hover': {\r\n                  backgroundColor: '#2e7d32',\r\n                },\r\n              }}\r\n            >\r\n              Approve Recording\r\n            </Button>\r\n          </Box>\r\n        )}\r\n\r\n        {/* 도어 잠금 버튼 */}\r\n        <div className=\"door-control\" style={{ marginTop: '20px', textAlign: 'center' }}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={handleDoorLock}\r\n            size=\"large\"\r\n            fullWidth\r\n            sx={{\r\n              backgroundColor: '#d32f2f', // 빨간색 배경\r\n              '&:hover': {\r\n                backgroundColor: '#c62828', // 호버 시 빨간색\r\n              },\r\n              padding: '12px', // 버튼 안쪽 여백\r\n              fontSize: '18px', // 글자 크기\r\n              fontWeight: '600', // 글자 두께\r\n              fontFamily: \"'Sour Gummy', cursive\"\r\n            }}\r\n            disabled={loading} // 로딩 중일 때 버튼 비활성화\r\n          >\r\n            {loading ? <CircularProgress size={24} sx={{ color: 'white' }} /> : 'Unlock Door'}\r\n          </Button>\r\n          {responseMessage && (\r\n            <Typography variant=\"body1\" color=\"textSecondary\" sx={{ marginTop: '20px' }}>\r\n              {responseMessage}\r\n            </Typography>\r\n          )}\r\n        </div>\r\n      </Box>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CCTVPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}