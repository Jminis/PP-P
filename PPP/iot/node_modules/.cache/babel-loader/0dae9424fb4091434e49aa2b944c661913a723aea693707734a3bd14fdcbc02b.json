{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/CCTVPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVPage = () => {\n  _s();\n  const [lockTimeout, setLockTimeout] = useState(null);\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지를 저장하는 상태\n\n  const sendCommand = async command => {\n    try {\n      const timestamp = new Date().toISOString();\n      const commandData = {\n        \"m2m:cin\": {\n          \"rn\": requestId,\n          // 고유한 리소스 이름으로 request identifier 역할을 하게 설정\n          \"con\": JSON.stringify({\n            \"command\": command,\n            \"timestamp\": timestamp\n          })\n        }\n      };\n\n      // 파이썬 서버로 POST 요청\n      const response = await fetch('http://localhost:5000/send-command', {\n        // 파이썬 서버 주소로 수정\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(commandData)\n      });\n\n      // 응답 받기\n      const data = await response.json();\n      setResponseMessage(data.message); // 파이썬 서버로부터 받은 응답 메시지 표시\n      alert(`${command} command sent successfully: ${data.message}`);\n    } catch (error) {\n      console.error('Error sending command:', error);\n      alert('An error occurred: ' + error.message);\n    }\n  };\n  const handleDoorLock = () => {\n    // Door unlock command\n    sendCommand('unlocked');\n\n    // Clear any existing timeout to avoid multiple lock/unlock requests\n    if (lockTimeout) {\n      clearTimeout(lockTimeout);\n    }\n\n    // Set timeout to lock door after 1 minute\n    const newTimeout = setTimeout(() => {\n      sendCommand('locked');\n      setLockTimeout(null);\n    }, 60000); // 1 minute = 60000 milliseconds\n\n    // Store the timeout reference\n    setLockTimeout(newTimeout);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cctv-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cctv-stream\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CCTV Live Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: \"CCTV Video Stream (Implementation Pending)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"door-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDoorLock,\n        children: \"Unlock Door\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: responseMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n};\n_s(CCTVPage, \"IJ4Af0NaUZhFvNoUZ5gnt/C5oVA=\");\n_c = CCTVPage;\nexport default CCTVPage;\nvar _c;\n$RefreshReg$(_c, \"CCTVPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","CCTVPage","_s","lockTimeout","setLockTimeout","responseMessage","setResponseMessage","sendCommand","command","timestamp","Date","toISOString","commandData","requestId","JSON","stringify","response","fetch","method","headers","body","data","json","message","alert","error","console","handleDoorLock","clearTimeout","newTimeout","setTimeout","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/CCTVPage.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nconst CCTVPage = () => {\r\n  const [lockTimeout, setLockTimeout] = useState(null);\r\n  const [responseMessage, setResponseMessage] = useState(\"\"); // 응답 메시지를 저장하는 상태\r\n\r\n\r\n  const sendCommand = async (command) => {\r\n    try {\r\n      const timestamp = new Date().toISOString();\r\n\r\n      const commandData = {\r\n        \"m2m:cin\": {\r\n          \"rn\": requestId,  // 고유한 리소스 이름으로 request identifier 역할을 하게 설정\r\n          \"con\": JSON.stringify({\r\n            \"command\": command,\r\n            \"timestamp\": timestamp\r\n          })\r\n        }\r\n      };\r\n\r\n      // 파이썬 서버로 POST 요청\r\n      const response = await fetch('http://localhost:5000/send-command', {  // 파이썬 서버 주소로 수정\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(commandData),\r\n      });\r\n\r\n      // 응답 받기\r\n      const data = await response.json();\r\n      setResponseMessage(data.message);  // 파이썬 서버로부터 받은 응답 메시지 표시\r\n      alert(`${command} command sent successfully: ${data.message}`);\r\n    } catch (error) {\r\n      console.error('Error sending command:', error);\r\n      alert('An error occurred: ' + error.message);\r\n    }\r\n  };\r\n\r\n  const handleDoorLock = () => {\r\n    // Door unlock command\r\n    sendCommand('unlocked');\r\n\r\n    // Clear any existing timeout to avoid multiple lock/unlock requests\r\n    if (lockTimeout) {\r\n      clearTimeout(lockTimeout);\r\n    }\r\n\r\n    // Set timeout to lock door after 1 minute\r\n    const newTimeout = setTimeout(() => {\r\n      sendCommand('locked');\r\n      setLockTimeout(null);\r\n    }, 60000); // 1 minute = 60000 milliseconds\r\n\r\n    // Store the timeout reference\r\n    setLockTimeout(newTimeout);\r\n  };\r\n\r\n  return (\r\n    <div className=\"cctv-container\">\r\n      <div className=\"cctv-stream\">\r\n        <h2>CCTV Live Stream</h2>\r\n        <div className=\"video-placeholder\">\r\n          CCTV Video Stream (Implementation Pending)\r\n        </div>\r\n      </div>\r\n      <div className=\"door-control\">\r\n        <button onClick={handleDoorLock}>Unlock Door</button>\r\n        <p>{responseMessage}</p> {/* 서버로부터 받은 응답 메시지 표시 */}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CCTVPage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}