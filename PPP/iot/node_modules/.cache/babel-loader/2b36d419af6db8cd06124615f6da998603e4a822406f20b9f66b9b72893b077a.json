{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Box, Paper, Checkbox, FormControlLabel } from '@mui/material';\nimport { LinePlot, BarPlot, MarkPlot } from '@mui/x-charts/LineChart';\nimport { ChartsXAxis } from '@mui/x-charts/ChartsXAxis';\nimport { ResponsiveChartContainer } from '@mui/x-charts/ResponsiveChartContainer';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataGraph() {\n  _s();\n  const [isResponsive, setIsResponsive] = useState(false);\n  const chartRef = useRef(null);\n  const Container = isResponsive ? ResponsiveChartContainer : 'div';\n  const sizingProps = isResponsive ? {} : {\n    width: 500,\n    height: 300\n  };\n\n  // Example data (you can replace these with your actual data)\n  const timeLabels = ['10:00', '10:05', '10:10', '10:15', '10:20'];\n  const shockData = [0.2, 0.5, 1.0, 0.3, 0.4]; // Shock data (g)\n  const temperatureData = [20, 21, 22, 21, 20]; // Temperature data (째C)\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      checked: isResponsive,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: event => setIsResponsive(event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this),\n      label: \"Use responsive container\",\n      labelPlacement: \"end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        height: 400\n      },\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        series: [{\n          type: 'line',\n          data: shockData,\n          label: 'Shock Sensor (g)',\n          color: 'rgba(255, 99, 132, 1)'\n        }, {\n          type: 'line',\n          data: temperatureData,\n          label: 'Temperature Sensor (째C)',\n          color: 'rgba(54, 162, 235, 1)'\n        }],\n        xAxis: [{\n          data: timeLabels,\n          scaleType: 'band',\n          id: 'x-axis-id'\n        }],\n        ...sizingProps,\n        children: [/*#__PURE__*/_jsxDEV(LinePlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(MarkPlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ChartsXAxis, {\n          label: \"Time\",\n          position: \"bottom\",\n          axisId: \"x-axis-id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"tCBihRcq1zjSn/VkycYVcVfLrxQ=\");\n_c = DataGraph;\nexport default DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Box","Paper","Checkbox","FormControlLabel","LinePlot","BarPlot","MarkPlot","ChartsXAxis","ResponsiveChartContainer","jsxDEV","_jsxDEV","DataGraph","_s","isResponsive","setIsResponsive","chartRef","Container","sizingProps","width","height","timeLabels","shockData","temperatureData","sx","children","checked","control","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","label","labelPlacement","elevation","series","type","data","color","xAxis","scaleType","id","position","axisId","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\r\nimport { Box, Paper, Checkbox, FormControlLabel } from '@mui/material';\r\nimport { LinePlot, BarPlot, MarkPlot } from '@mui/x-charts/LineChart';\r\nimport { ChartsXAxis } from '@mui/x-charts/ChartsXAxis';\r\nimport { ResponsiveChartContainer } from '@mui/x-charts/ResponsiveChartContainer';\r\n\r\nfunction DataGraph() {\r\n  const [isResponsive, setIsResponsive] = useState(false);\r\n  const chartRef = useRef(null);\r\n\r\n  const Container = isResponsive ? ResponsiveChartContainer : 'div';\r\n  const sizingProps = isResponsive ? {} : { width: 500, height: 300 };\r\n\r\n  // Example data (you can replace these with your actual data)\r\n  const timeLabels = ['10:00', '10:05', '10:10', '10:15', '10:20'];\r\n  const shockData = [0.2, 0.5, 1.0, 0.3, 0.4]; // Shock data (g)\r\n  const temperatureData = [20, 21, 22, 21, 20]; // Temperature data (째C)\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <FormControlLabel\r\n        checked={isResponsive}\r\n        control={\r\n          <Checkbox onChange={(event) => setIsResponsive(event.target.checked)} />\r\n        }\r\n        label=\"Use responsive container\"\r\n        labelPlacement=\"end\"\r\n      />\r\n\r\n      <Paper sx={{ width: '100%', height: 400 }} elevation={3}>\r\n        <Container\r\n          series={[\r\n            {\r\n              type: 'line',\r\n              data: shockData,\r\n              label: 'Shock Sensor (g)',\r\n              color: 'rgba(255, 99, 132, 1)',\r\n            },\r\n            {\r\n              type: 'line',\r\n              data: temperatureData,\r\n              label: 'Temperature Sensor (째C)',\r\n              color: 'rgba(54, 162, 235, 1)',\r\n            },\r\n          ]}\r\n          xAxis={[\r\n            {\r\n              data: timeLabels,\r\n              scaleType: 'band',\r\n              id: 'x-axis-id',\r\n            },\r\n          ]}\r\n          {...sizingProps}\r\n        >\r\n          <LinePlot />\r\n          <MarkPlot />\r\n          <ChartsXAxis label=\"Time\" position=\"bottom\" axisId=\"x-axis-id\" />\r\n        </Container>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DataGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}