{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport MenuItem from '@mui/material/MenuItem';\nimport { ResponsiveChartContainer } from '@mui/x-charts/ResponsiveChartContainer';\nimport { BarPlot } from '@mui/x-charts/BarChart';\nimport { LinePlot } from '@mui/x-charts/LineChart';\nimport { ChartsXAxis } from '@mui/x-charts/ChartsXAxis';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DataGraph() {\n  _s();\n  // 기본 내보내기 설정\n  const [type, setType] = React.useState('line'); // 차트 종류 상태\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      value: type,\n      onChange: event => setType(event.target.value),\n      label: \"Series Type\",\n      sx: {\n        minWidth: 150\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"line\",\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"bar\",\n        children: \"Bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ResponsiveChartContainer, {\n        series: [{\n          type,\n          // 선택된 차트 유형\n          data: [1, 2, 3, 2, 1]\n        }, {\n          type,\n          // 선택된 차트 유형\n          data: [4, 3, 1, 3, 4]\n        }],\n        xAxis: [{\n          data: ['A', 'B', 'C', 'D', 'E'],\n          scaleType: 'band',\n          id: 'x-axis-id'\n        }],\n        height: 200,\n        children: [type === 'line' && /*#__PURE__*/_jsxDEV(LinePlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 31\n        }, this), type === 'bar' && /*#__PURE__*/_jsxDEV(BarPlot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(ChartsXAxis, {\n          label: \"X axis\",\n          position: \"bottom\",\n          axisId: \"x-axis-id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"Kw2eKJe48w5u5hCJHbfAEsv22kc=\");\n_c = DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","Box","TextField","MenuItem","ResponsiveChartContainer","BarPlot","LinePlot","ChartsXAxis","jsxDEV","_jsxDEV","DataGraph","_s","type","setType","useState","sx","width","children","select","value","onChange","event","target","label","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","series","data","xAxis","scaleType","id","height","position","axisId","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { ResponsiveChartContainer } from '@mui/x-charts/ResponsiveChartContainer';\r\nimport { BarPlot } from '@mui/x-charts/BarChart';\r\nimport { LinePlot } from '@mui/x-charts/LineChart';\r\nimport { ChartsXAxis } from '@mui/x-charts/ChartsXAxis';\r\n\r\nexport default function DataGraph() { // 기본 내보내기 설정\r\n  const [type, setType] = React.useState('line'); // 차트 종류 상태\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <TextField\r\n        select\r\n        value={type}\r\n        onChange={(event) => setType(event.target.value)}\r\n        label=\"Series Type\"\r\n        sx={{ minWidth: 150 }}\r\n      >\r\n        <MenuItem value=\"line\">Line</MenuItem>\r\n        <MenuItem value=\"bar\">Bar</MenuItem>\r\n      </TextField>\r\n\r\n      <div>\r\n        <ResponsiveChartContainer\r\n          series={[\r\n            {\r\n              type, // 선택된 차트 유형\r\n              data: [1, 2, 3, 2, 1],\r\n            },\r\n            {\r\n              type, // 선택된 차트 유형\r\n              data: [4, 3, 1, 3, 4],\r\n            },\r\n          ]}\r\n          xAxis={[\r\n            {\r\n              data: ['A', 'B', 'C', 'D', 'E'],\r\n              scaleType: 'band',\r\n              id: 'x-axis-id',\r\n            },\r\n          ]}\r\n          height={200}\r\n        >\r\n          {/* 조건부 렌더링: 선택된 type에 맞는 차트 렌더링 */}\r\n          {type === 'line' && <LinePlot />}\r\n          {type === 'bar' && <BarPlot />}\r\n          \r\n          <ChartsXAxis label=\"X axis\" position=\"bottom\" axisId=\"x-axis-id\" />\r\n        </ResponsiveChartContainer>\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}