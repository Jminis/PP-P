{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport { Box, Paper, Checkbox, FormControlLabel } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DataGraph() {\n  _s();\n  const [isResponsive, setIsResponsive] = useState(false); // 반응형 차트 사용 여부를 관리하는 상태\n\n  // 시간 데이터\n  const timeLabels = ['10:00', '10:05', '10:10', '10:15', '10:20'];\n\n  // 센서 데이터\n  const data = [{\n    time: '10:00',\n    shock: 0.2,\n    temperature: 20\n  }, {\n    time: '10:05',\n    shock: 0.5,\n    temperature: 21\n  }, {\n    time: '10:10',\n    shock: 1.0,\n    temperature: 22\n  }, {\n    time: '10:15',\n    shock: 0.3,\n    temperature: 21\n  }, {\n    time: '10:20',\n    shock: 0.4,\n    temperature: 20\n  }];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      checked: isResponsive,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        onChange: event => setIsResponsive(event.target.checked)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }, this),\n      label: \"Use responsive container\",\n      labelPlacement: \"end\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Paper, {\n      sx: {\n        width: '100%',\n        height: 400\n      },\n      elevation: 3,\n      children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n        width: \"100%\",\n        height: \"100%\",\n        children: /*#__PURE__*/_jsxDEV(LineChart, {\n          data: data,\n          children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n            strokeDasharray: \"3 3\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n            dataKey: \"time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"shock\",\n            stroke: \"#ff6384\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Line, {\n            type: \"monotone\",\n            dataKey: \"temperature\",\n            stroke: \"#36a2eb\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"hhv7oT0DUoJCoAXYWeCfaESh5s4=\");\n_c = DataGraph;\nexport default DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","useState","LineChart","Line","XAxis","YAxis","CartesianGrid","Tooltip","Legend","ResponsiveContainer","Box","Paper","Checkbox","FormControlLabel","jsxDEV","_jsxDEV","DataGraph","_s","isResponsive","setIsResponsive","timeLabels","data","time","shock","temperature","sx","width","children","checked","control","onChange","event","target","fileName","_jsxFileName","lineNumber","columnNumber","label","labelPlacement","height","elevation","strokeDasharray","dataKey","type","stroke","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\r\nimport { Box, Paper, Checkbox, FormControlLabel } from '@mui/material';\r\n\r\nfunction DataGraph() {\r\n  const [isResponsive, setIsResponsive] = useState(false); // 반응형 차트 사용 여부를 관리하는 상태\r\n\r\n  // 시간 데이터\r\n  const timeLabels = ['10:00', '10:05', '10:10', '10:15', '10:20'];\r\n  \r\n  // 센서 데이터\r\n  const data = [\r\n    { time: '10:00', shock: 0.2, temperature: 20 },\r\n    { time: '10:05', shock: 0.5, temperature: 21 },\r\n    { time: '10:10', shock: 1.0, temperature: 22 },\r\n    { time: '10:15', shock: 0.3, temperature: 21 },\r\n    { time: '10:20', shock: 0.4, temperature: 20 },\r\n  ];\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      {/* 반응형 차트 사용 여부를 토글하는 체크박스 */}\r\n      <FormControlLabel\r\n        checked={isResponsive}\r\n        control={\r\n          <Checkbox onChange={(event) => setIsResponsive(event.target.checked)} />\r\n        }\r\n        label=\"Use responsive container\"\r\n        labelPlacement=\"end\"\r\n      />\r\n\r\n      <Paper sx={{ width: '100%', height: 400 }} elevation={3}>\r\n        {/* 반응형 차트 컨테이너 */}\r\n        <ResponsiveContainer width=\"100%\" height=\"100%\">\r\n          <LineChart data={data}>\r\n            {/* 격자선 추가 */}\r\n            <CartesianGrid strokeDasharray=\"3 3\" />\r\n            {/* X축 데이터 */}\r\n            <XAxis dataKey=\"time\" />\r\n            {/* Y축 데이터 */}\r\n            <YAxis />\r\n            {/* 툴팁 */}\r\n            <Tooltip />\r\n            {/* 범례 */}\r\n            <Legend />\r\n            {/* 충격 센서 데이터 라인 */}\r\n            <Line type=\"monotone\" dataKey=\"shock\" stroke=\"#ff6384\" />\r\n            {/* 온도 센서 데이터 라인 */}\r\n            <Line type=\"monotone\" dataKey=\"temperature\" stroke=\"#36a2eb\" />\r\n          </LineChart>\r\n        </ResponsiveContainer>\r\n      </Paper>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default DataGraph;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}