{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\nimport DataGraph from './DataGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    height: '600px'\n  };\n  const [location, setLocation] = useState({\n    lat: 37.557140718019674,\n    lng: 127.07944948917951\n  });\n  useEffect(() => {\n    const fetchLocationData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\n          method: 'GET',\n          headers: {\n            'X-M2M-Origin': 'SafePackage',\n            'X-M2M-RI': '12345',\n            'X-M2M-RVI': '3',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\n            const locationData = JSON.parse(data['m2m:cin'].con);\n            setLocation({\n              lat: parseFloat(locationData.latitude),\n              lng: parseFloat(locationData.longitude)\n            });\n          }\n        } else {\n          console.error('Failed to fetch location data');\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n\n    // 주기적으로 위치 업데이트\n    const intervalId = setInterval(fetchLocationData, 5000);\n    return () => clearInterval(intervalId); // 컴포넌트 언마운트 시 정리\n  }, []); // 처음 컴포넌트가 마운트될 때만 실행됨\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC30\\uC1A1 \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: {\n          lat: location.lat,\n          lng: location.lng\n        } // 위치가 변경되면 지도 중심도 변경\n        ,\n        level: 3,\n        style: containerStyle,\n        appKey: \"27def025665d22e2a866f398cfb7a3aa\",\n        children: /*#__PURE__*/_jsxDEV(MapMarker, {\n          position: {\n            lat: location.lat,\n            lng: location.lng\n          } // 마커 위치를 location으로 설정\n          ,\n          image: {\n            src: \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\",\n            size: {\n              width: 30,\n              height: 50\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              background: \"#fff\",\n              // 배경색\n              border: \"2px solid #3498db\",\n              // 테두리 색상\n              borderRadius: \"15px\",\n              // 동글동글한 모양\n              padding: \"10px 15px\",\n              // 패딩\n              boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.3)\",\n              // 그림자 효과\n              textAlign: \"center\",\n              // 텍스트 가운데 정렬\n              color: \"#2c3e50\",\n              // 텍스트 색상\n              fontWeight: \"bold\",\n              // 텍스트 강조\n              fontSize: \"14px\",\n              // 텍스트 크기\n              whiteSpace: \"nowrap\" // 텍스트 줄바꿈 방지\n            },\n            children: \"SafetyBox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130 \\uC2DC\\uAC01\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"location-display\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"\\uC704\\uCE58 \\uC815\\uBCF4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uC704\\uB3C4: \", location.lat]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\uACBD\\uB3C4: \", location.lng]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"LPq05ebD46RxIp59LNOt8CVCKHc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Map","MapMarker","DataGraph","jsxDEV","_jsxDEV","Dashboard","_s","containerStyle","width","height","location","setLocation","lat","lng","fetchLocationData","response","fetch","method","headers","ok","data","json","con","locationData","JSON","parse","parseFloat","latitude","longitude","console","error","intervalId","setInterval","clearInterval","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","level","style","appKey","position","image","src","size","background","border","borderRadius","padding","boxShadow","textAlign","color","fontWeight","fontSize","whiteSpace","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\";\r\nimport DataGraph from './DataGraph';\r\n\r\nfunction Dashboard() {\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '600px',\r\n  };\r\n\r\n  const [location, setLocation] = useState({\r\n    lat: 37.557140718019674,\r\n    lng: 127.07944948917951,\r\n  });\r\n\r\n  useEffect(() => {\r\n    const fetchLocationData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-M2M-Origin': 'SafePackage',\r\n            'X-M2M-RI': '12345',\r\n            'X-M2M-RVI': '3',\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\r\n            const locationData = JSON.parse(data['m2m:cin'].con);\r\n            setLocation({\r\n              lat: parseFloat(locationData.latitude),\r\n              lng: parseFloat(locationData.longitude),\r\n            });\r\n          }\r\n        } else {\r\n          console.error('Failed to fetch location data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching location:', error);\r\n      }\r\n    };\r\n\r\n    // 주기적으로 위치 업데이트\r\n    const intervalId = setInterval(fetchLocationData, 5000);\r\n\r\n    return () => clearInterval(intervalId); // 컴포넌트 언마운트 시 정리\r\n  }, []); // 처음 컴포넌트가 마운트될 때만 실행됨\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"map-section\">\r\n        <h2>배송 위치</h2>\r\n        <Map\r\n          center={{ lat: location.lat, lng: location.lng }} // 위치가 변경되면 지도 중심도 변경\r\n          level={3}\r\n          style={containerStyle}\r\n          appKey=\"27def025665d22e2a866f398cfb7a3aa\"\r\n        >\r\n          <MapMarker\r\n            position={{ lat: location.lat, lng: location.lng }} // 마커 위치를 location으로 설정\r\n            image={{\r\n              src: \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/markerStar.png\",\r\n              size: { width: 30, height: 50 },\r\n            }}\r\n          >\r\n            <div style={{\r\n              background: \"#fff\", // 배경색\r\n              border: \"2px solid #3498db\", // 테두리 색상\r\n              borderRadius: \"15px\", // 동글동글한 모양\r\n              padding: \"10px 15px\", // 패딩\r\n              boxShadow: \"0px 2px 5px rgba(0, 0, 0, 0.3)\", // 그림자 효과\r\n              textAlign: \"center\", // 텍스트 가운데 정렬\r\n              color: \"#2c3e50\", // 텍스트 색상\r\n              fontWeight: \"bold\", // 텍스트 강조\r\n              fontSize: \"14px\", // 텍스트 크기\r\n              whiteSpace: \"nowrap\", // 텍스트 줄바꿈 방지\r\n            }}>\r\n              SafetyBox\r\n            </div>\r\n          </MapMarker>\r\n        </Map>\r\n      </div>\r\n      <div className=\"data-section\">\r\n        <h2>데이터 시각화</h2>\r\n        <DataGraph />\r\n      </div>\r\n      <div className=\"location-display\">\r\n        <h3>위치 정보</h3>\r\n        <p>위도: {location.lat}</p>\r\n        <p>경도: {location.lng}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,SAAS,QAAQ,sBAAsB;AACrD,OAAOC,SAAS,MAAM,aAAa;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEpC,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EACnB,MAAMC,cAAc,GAAG;IACrBC,KAAK,EAAE,MAAM;IACbC,MAAM,EAAE;EACV,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC;IACvCa,GAAG,EAAE,kBAAkB;IACvBC,GAAG,EAAE;EACP,CAAC,CAAC;EAEFf,SAAS,CAAC,MAAM;IACd,MAAMgB,iBAAiB,GAAG,MAAAA,CAAA,KAAY;MACpC,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,sDAAsD,EAAE;UACnFC,MAAM,EAAE,KAAK;UACbC,OAAO,EAAE;YACP,cAAc,EAAE,aAAa;YAC7B,UAAU,EAAE,OAAO;YACnB,WAAW,EAAE,GAAG;YAChB,cAAc,EAAE,kBAAkB;YAClC,QAAQ,EAAE;UACZ;QACF,CAAC,CAAC;QAEF,IAAIH,QAAQ,CAACI,EAAE,EAAE;UACf,MAAMC,IAAI,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;UAClC,IAAID,IAAI,IAAIA,IAAI,CAAC,SAAS,CAAC,IAAIA,IAAI,CAAC,SAAS,CAAC,CAACE,GAAG,EAAE;YAClD,MAAMC,YAAY,GAAGC,IAAI,CAACC,KAAK,CAACL,IAAI,CAAC,SAAS,CAAC,CAACE,GAAG,CAAC;YACpDX,WAAW,CAAC;cACVC,GAAG,EAAEc,UAAU,CAACH,YAAY,CAACI,QAAQ,CAAC;cACtCd,GAAG,EAAEa,UAAU,CAACH,YAAY,CAACK,SAAS;YACxC,CAAC,CAAC;UACJ;QACF,CAAC,MAAM;UACLC,OAAO,CAACC,KAAK,CAAC,+BAA+B,CAAC;QAChD;MACF,CAAC,CAAC,OAAOA,KAAK,EAAE;QACdD,OAAO,CAACC,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAClD;IACF,CAAC;;IAED;IACA,MAAMC,UAAU,GAAGC,WAAW,CAAClB,iBAAiB,EAAE,IAAI,CAAC;IAEvD,OAAO,MAAMmB,aAAa,CAACF,UAAU,CAAC,CAAC,CAAC;EAC1C,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,oBACE3B,OAAA;IAAK8B,SAAS,EAAC,qBAAqB;IAAAC,QAAA,gBAClC/B,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,gBAC1B/B,OAAA;QAAA+B,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdnC,OAAA,CAACJ,GAAG;QACFwC,MAAM,EAAE;UAAE5B,GAAG,EAAEF,QAAQ,CAACE,GAAG;UAAEC,GAAG,EAAEH,QAAQ,CAACG;QAAI,CAAE,CAAC;QAAA;QAClD4B,KAAK,EAAE,CAAE;QACTC,KAAK,EAAEnC,cAAe;QACtBoC,MAAM,EAAC,kCAAkC;QAAAR,QAAA,eAEzC/B,OAAA,CAACH,SAAS;UACR2C,QAAQ,EAAE;YAAEhC,GAAG,EAAEF,QAAQ,CAACE,GAAG;YAAEC,GAAG,EAAEH,QAAQ,CAACG;UAAI,CAAE,CAAC;UAAA;UACpDgC,KAAK,EAAE;YACLC,GAAG,EAAE,yEAAyE;YAC9EC,IAAI,EAAE;cAAEvC,KAAK,EAAE,EAAE;cAAEC,MAAM,EAAE;YAAG;UAChC,CAAE;UAAA0B,QAAA,eAEF/B,OAAA;YAAKsC,KAAK,EAAE;cACVM,UAAU,EAAE,MAAM;cAAE;cACpBC,MAAM,EAAE,mBAAmB;cAAE;cAC7BC,YAAY,EAAE,MAAM;cAAE;cACtBC,OAAO,EAAE,WAAW;cAAE;cACtBC,SAAS,EAAE,gCAAgC;cAAE;cAC7CC,SAAS,EAAE,QAAQ;cAAE;cACrBC,KAAK,EAAE,SAAS;cAAE;cAClBC,UAAU,EAAE,MAAM;cAAE;cACpBC,QAAQ,EAAE,MAAM;cAAE;cAClBC,UAAU,EAAE,QAAQ,CAAE;YACxB,CAAE;YAAAtB,QAAA,EAAC;UAEH;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACT,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eACNnC,OAAA;MAAK8B,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC3B/B,OAAA;QAAA+B,QAAA,EAAI;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAChBnC,OAAA,CAACF,SAAS;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eACNnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/B/B,OAAA;QAAA+B,QAAA,EAAI;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACdnC,OAAA;QAAA+B,QAAA,GAAG,gBAAI,EAACzB,QAAQ,CAACE,GAAG;MAAA;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzBnC,OAAA;QAAA+B,QAAA,GAAG,gBAAI,EAACzB,QAAQ,CAACG,GAAG;MAAA;QAAAuB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACjC,EAAA,CA7FQD,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AA+FlB,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}