{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/CCTVPage.js\";\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CCTVPage = () => {\n  const handleDoorLock = async () => {\n    try {\n      const timestamp = Date.now();\n      const commandData = {\n        \"m2m:cin\": {\n          // 주의: m2m:cin으로 변경\n          \"rn\": \"command\",\n          \"con\": JSON.stringify({\n            \"command\": \"unlocked\"\n          })\n        }\n      };\n      const unlockResponse = await fetch('http://localhost:8081/cse-mn/doorAE/command', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json;ty=4',\n          // ty=4 추가\n          'X-M2M-Origin': 'CdoorAE',\n          'X-M2M-RI': '12345',\n          'X-M2M-RVI': '3',\n          'Accept': 'application/json'\n        },\n        body: JSON.stringify(commandData)\n      });\n      if (unlockResponse.ok) {\n        const responseData = await unlockResponse.json();\n        console.log('Unlock Response:', responseData);\n        alert('Door unlocked successfully');\n\n        // 자동 잠금 로직도 동일하게 수정\n        setTimeout(async () => {\n          const lockCommandData = {\n            \"m2m:cin\": {\n              \"rn\": \"command\",\n              \"con\": JSON.stringify({\n                \"command\": \"locked\"\n              })\n            }\n          };\n          const lockResponse = await fetch('http://localhost:8081/cse-mn/doorAE/command', {\n            method: 'POST',\n            headers: {\n              'Content-Type': 'application/json;ty=4',\n              'X-M2M-Origin': 'CdoorAE',\n              'X-M2M-RI': '12345',\n              'X-M2M-RVI': '3',\n              'Accept': 'application/json'\n            },\n            body: JSON.stringify(lockCommandData)\n          });\n          if (lockResponse.ok) {\n            const lockResponseData = await lockResponse.json();\n            console.log('Lock Response:', lockResponseData);\n            alert('Door locked successfully after 1 minute');\n          } else {\n            alert('Failed to lock door');\n          }\n        }, 60000);\n      } else {\n        const errorData = await unlockResponse.json();\n        console.error('Unlock Error:', errorData);\n        alert('Failed to unlock door');\n      }\n    } catch (error) {\n      console.error('Detailed Error:', error);\n      alert('An error occurred: ' + error.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"cctv-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cctv-stream\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"CCTV Live Stream\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"video-placeholder\",\n        children: \"CCTV Video Stream (Implementation Pending)\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"door-control\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDoorLock,\n        children: \"Unlock Door\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n};\n_c = CCTVPage;\nexport default CCTVPage;\nvar _c;\n$RefreshReg$(_c, \"CCTVPage\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","CCTVPage","handleDoorLock","timestamp","Date","now","commandData","JSON","stringify","unlockResponse","fetch","method","headers","body","ok","responseData","json","console","log","alert","setTimeout","lockCommandData","lockResponse","lockResponseData","errorData","error","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/CCTVPage.js"],"sourcesContent":["import React from 'react';\r\n\r\nconst CCTVPage = () => {\r\n  const handleDoorLock = async () => {\r\n    try {\r\n      const timestamp = Date.now();\r\n      const commandData = {\r\n        \"m2m:cin\": {  // 주의: m2m:cin으로 변경\r\n          \"rn\": \"command\",\r\n          \"con\": JSON.stringify({\"command\": \"unlocked\"})\r\n        }\r\n      };\r\n\r\n      const unlockResponse = await fetch('http://localhost:8081/cse-mn/doorAE/command', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json;ty=4', // ty=4 추가\r\n          'X-M2M-Origin': 'CdoorAE',\r\n          'X-M2M-RI': '12345',\r\n          'X-M2M-RVI': '3',\r\n          'Accept': 'application/json'\r\n        },\r\n        body: JSON.stringify(commandData),\r\n      });\r\n\r\n      if (unlockResponse.ok) {\r\n        const responseData = await unlockResponse.json();\r\n        console.log('Unlock Response:', responseData);\r\n        alert('Door unlocked successfully');\r\n\r\n        // 자동 잠금 로직도 동일하게 수정\r\n        setTimeout(async () => {\r\n          const lockCommandData = {\r\n            \"m2m:cin\": {\r\n              \"rn\": \"command\",\r\n              \"con\": JSON.stringify({\"command\": \"locked\"})\r\n            }\r\n          };\r\n\r\n          const lockResponse = await fetch('http://localhost:8081/cse-mn/doorAE/command', {\r\n            method: 'POST',\r\n            headers: {\r\n              'Content-Type': 'application/json;ty=4',\r\n              'X-M2M-Origin': 'CdoorAE',\r\n              'X-M2M-RI': '12345',\r\n              'X-M2M-RVI': '3',\r\n              'Accept': 'application/json'\r\n            },\r\n            body: JSON.stringify(lockCommandData),\r\n          });\r\n\r\n          if (lockResponse.ok) {\r\n            const lockResponseData = await lockResponse.json();\r\n            console.log('Lock Response:', lockResponseData);\r\n            alert('Door locked successfully after 1 minute');\r\n          } else {\r\n            alert('Failed to lock door');\r\n          }\r\n        }, 60000);\r\n      } else {\r\n        const errorData = await unlockResponse.json();\r\n        console.error('Unlock Error:', errorData);\r\n        alert('Failed to unlock door');\r\n      }\r\n    } catch (error) {\r\n      console.error('Detailed Error:', error);\r\n      alert('An error occurred: ' + error.message);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cctv-container\">\r\n      <div className=\"cctv-stream\">\r\n        <h2>CCTV Live Stream</h2>\r\n        <div className=\"video-placeholder\">\r\n          CCTV Video Stream (Implementation Pending)\r\n        </div>\r\n      </div>\r\n      <div className=\"door-control\">\r\n        <button onClick={handleDoorLock}>Unlock Door</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CCTVPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}