{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/DataGraph.js\",\n  _s = $RefreshSig$();\nimport * as React from 'react';\nimport { Box, TextField, MenuItem } from '@mui/material';\nimport { Line } from 'react-chartjs-2'; // react-chartjs-2 사용\nimport { Chart as ChartJS, registerables } from 'chart.js'; // Chart.js 설정\n\n// Chart.js 플러그인 등록\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartJS.register(...registerables);\nexport default function DataGraph() {\n  _s();\n  const [type, setType] = React.useState('line');\n  const chartData = {\n    labels: ['A', 'B', 'C', 'D', 'E'],\n    datasets: [{\n      label: '데이터 1',\n      data: [1, 2, 3, 2, 1],\n      borderColor: 'rgba(75, 192, 192, 1)',\n      backgroundColor: 'rgba(75, 192, 192, 0.2)',\n      fill: true\n    }, {\n      label: '데이터 2',\n      data: [4, 3, 1, 3, 4],\n      borderColor: 'rgba(153, 102, 255, 1)',\n      backgroundColor: 'rgba(153, 102, 255, 0.2)',\n      fill: true\n    }]\n  };\n  const options = {\n    responsive: true,\n    scales: {\n      x: {\n        title: {\n          display: true,\n          text: 'X Axis'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Y Axis'\n        }\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      width: '100%'\n    },\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      select: true,\n      value: type,\n      onChange: event => setType(event.target.value),\n      label: \"Series Type\",\n      sx: {\n        minWidth: 150\n      },\n      children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"line\",\n        children: \"Line\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n        value: \"bar\",\n        children: \"Bar\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Line, {\n        data: chartData,\n        options: options\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_s(DataGraph, \"Kw2eKJe48w5u5hCJHbfAEsv22kc=\");\n_c = DataGraph;\nvar _c;\n$RefreshReg$(_c, \"DataGraph\");","map":{"version":3,"names":["React","Box","TextField","MenuItem","Line","Chart","ChartJS","registerables","jsxDEV","_jsxDEV","register","DataGraph","_s","type","setType","useState","chartData","labels","datasets","label","data","borderColor","backgroundColor","fill","options","responsive","scales","x","title","display","text","y","sx","width","children","select","value","onChange","event","target","minWidth","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/DataGraph.js"],"sourcesContent":["import * as React from 'react';\r\nimport { Box, TextField, MenuItem } from '@mui/material';\r\nimport { Line } from 'react-chartjs-2'; // react-chartjs-2 사용\r\nimport { Chart as ChartJS, registerables } from 'chart.js'; // Chart.js 설정\r\n\r\n// Chart.js 플러그인 등록\r\nChartJS.register(...registerables);\r\n\r\nexport default function DataGraph() {\r\n  const [type, setType] = React.useState('line');\r\n\r\n  const chartData = {\r\n    labels: ['A', 'B', 'C', 'D', 'E'],\r\n    datasets: [\r\n      {\r\n        label: '데이터 1',\r\n        data: [1, 2, 3, 2, 1],\r\n        borderColor: 'rgba(75, 192, 192, 1)',\r\n        backgroundColor: 'rgba(75, 192, 192, 0.2)',\r\n        fill: true,\r\n      },\r\n      {\r\n        label: '데이터 2',\r\n        data: [4, 3, 1, 3, 4],\r\n        borderColor: 'rgba(153, 102, 255, 1)',\r\n        backgroundColor: 'rgba(153, 102, 255, 0.2)',\r\n        fill: true,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    responsive: true,\r\n    scales: {\r\n      x: {\r\n        title: {\r\n          display: true,\r\n          text: 'X Axis',\r\n        },\r\n      },\r\n      y: {\r\n        title: {\r\n          display: true,\r\n          text: 'Y Axis',\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Box sx={{ width: '100%' }}>\r\n      <TextField\r\n        select\r\n        value={type}\r\n        onChange={(event) => setType(event.target.value)}\r\n        label=\"Series Type\"\r\n        sx={{ minWidth: 150 }}\r\n      >\r\n        <MenuItem value=\"line\">Line</MenuItem>\r\n        <MenuItem value=\"bar\">Bar</MenuItem>\r\n      </TextField>\r\n\r\n      <div>\r\n        {/* react-chartjs-2 차트 사용 */}\r\n        <Line data={chartData} options={options} />\r\n      </div>\r\n    </Box>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}