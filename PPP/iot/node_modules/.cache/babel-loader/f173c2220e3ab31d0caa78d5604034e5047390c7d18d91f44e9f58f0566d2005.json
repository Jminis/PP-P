{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\n/* global kakao */\nimport React, { useEffect, useState } from 'react';\nimport { Map } from \"react-kakao-maps-sdk\";\nimport DataGraph from './DataGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    height: '400px'\n  };\n  const [location, setLocation] = useState({\n    lat: 37.7749,\n    // 기본 위도 (서버로부터 받아오기 전 기본값)\n    lng: 126.9780 // 기본 경도 (서버로부터 받아오기 전 기본값)\n  });\n  useEffect(() => {\n    // 서버로부터 위치 데이터 받아오기\n    const fetchLocationData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\n          method: 'GET',\n          headers: {\n            'X-M2M-Origin': 'SafePackage',\n            'X-M2M-RI': '12345',\n            'X-M2M-RVI': '3',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          },\n          mode: 'no-cors' // CORS 오류를 방지하려면 이 모드 추가\n        });\n\n        // CORS 정책을 우회하기 위해 mode: 'no-cors' 사용시, 응답의 내용을 읽을 수 없으므로 추가 처리가 필요합니다.\n        if (response.ok) {\n          const data = await response.json();\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\n            const locationData = JSON.parse(data['m2m:cin'].con);\n            setLocation({\n              lat: parseFloat(locationData.latitude),\n              lng: parseFloat(locationData.longitude)\n            });\n          }\n        } else {\n          console.error('Failed to fetch location data');\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n    fetchLocationData();\n\n    // 카카오맵 API 스크립트 로드\n    const script = document.createElement('script');\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=\"27def025665d22e2a866f398cfb7a3aa\"&autoload=false`;\n    script.async = true;\n    script.onload = () => {\n      kakao.maps.load(() => {\n        const mapContainer = document.getElementById('kakao-map');\n        const mapOption = {\n          center: new kakao.maps.LatLng(location.lat, location.lng),\n          level: 3 // 지도 확대 레벨\n        };\n        const map = new kakao.maps.Map(mapContainer, mapOption);\n\n        // 마커 추가\n        const markerPosition = new kakao.maps.LatLng(location.lat, location.lng);\n        const marker = new kakao.maps.Marker({\n          position: markerPosition\n        });\n        marker.setMap(map);\n      });\n    };\n    document.body.appendChild(script);\n  }, [location.lat, location.lng]); // location이 변경될 때마다 맵을 새로 렌더링\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC30\\uC1A1 \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"kakao-map\",\n        style: containerStyle\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130 \\uC2DC\\uAC01\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"yy7Uw31UJGHSSPw/gbhMaSkdgJc=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Map","DataGraph","jsxDEV","_jsxDEV","Dashboard","_s","containerStyle","width","height","location","setLocation","lat","lng","fetchLocationData","response","fetch","method","headers","mode","ok","data","json","con","locationData","JSON","parse","parseFloat","latitude","longitude","console","error","script","document","createElement","src","async","onload","kakao","maps","load","mapContainer","getElementById","mapOption","center","LatLng","level","map","markerPosition","marker","Marker","position","setMap","body","appendChild","className","children","fileName","_jsxFileName","lineNumber","columnNumber","id","style","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/Dashboard.js"],"sourcesContent":["/* global kakao */\r\nimport React, { useEffect, useState } from 'react';\r\nimport { Map } from \"react-kakao-maps-sdk\";\r\nimport DataGraph from './DataGraph';\r\n\r\nfunction Dashboard() {\r\n  const containerStyle = {\r\n    width: '100%',\r\n    height: '400px',\r\n  };\r\n\r\n  const [location, setLocation] = useState({\r\n    lat: 37.7749, // 기본 위도 (서버로부터 받아오기 전 기본값)\r\n    lng: 126.9780, // 기본 경도 (서버로부터 받아오기 전 기본값)\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 서버로부터 위치 데이터 받아오기\r\n    const fetchLocationData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-M2M-Origin': 'SafePackage',\r\n            'X-M2M-RI': '12345',\r\n            'X-M2M-RVI': '3',\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n          },\r\n          mode: 'no-cors',  // CORS 오류를 방지하려면 이 모드 추가\r\n        });\r\n\r\n        // CORS 정책을 우회하기 위해 mode: 'no-cors' 사용시, 응답의 내용을 읽을 수 없으므로 추가 처리가 필요합니다.\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\r\n            const locationData = JSON.parse(data['m2m:cin'].con);\r\n            setLocation({\r\n              lat: parseFloat(locationData.latitude),\r\n              lng: parseFloat(locationData.longitude),\r\n            });\r\n          }\r\n        } else {\r\n          console.error('Failed to fetch location data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching location:', error);\r\n      }\r\n    };\r\n\r\n    fetchLocationData();\r\n\r\n    // 카카오맵 API 스크립트 로드\r\n    const script = document.createElement('script');\r\n    script.src = `https://dapi.kakao.com/v2/maps/sdk.js?appkey=\"27def025665d22e2a866f398cfb7a3aa\"&autoload=false`;\r\n    script.async = true;\r\n\r\n    script.onload = () => {\r\n      kakao.maps.load(() => {\r\n        const mapContainer = document.getElementById('kakao-map');\r\n        const mapOption = {\r\n          center: new kakao.maps.LatLng(location.lat, location.lng),\r\n          level: 3, // 지도 확대 레벨\r\n        };\r\n\r\n        const map = new kakao.maps.Map(mapContainer, mapOption);\r\n\r\n        // 마커 추가\r\n        const markerPosition = new kakao.maps.LatLng(location.lat, location.lng);\r\n        const marker = new kakao.maps.Marker({\r\n          position: markerPosition,\r\n        });\r\n        marker.setMap(map);\r\n      });\r\n    };\r\n\r\n    document.body.appendChild(script);\r\n  }, [location.lat, location.lng]); // location이 변경될 때마다 맵을 새로 렌더링\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"map-section\">\r\n        <h2>배송 위치</h2>\r\n        <div id=\"kakao-map\" style={containerStyle}></div>\r\n      </div>\r\n      <div className=\"data-section\">\r\n        <h2>데이터 시각화</h2>\r\n        <DataGraph />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}