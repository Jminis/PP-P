{"ast":null,"code":"var _jsxFileName = \"/home/cosmos/PPP/iot/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\"; // MapMarker로 변경\nimport DataGraph from './DataGraph';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Dashboard() {\n  _s();\n  const containerStyle = {\n    width: '100%',\n    // 크기 수정\n    height: '600px'\n  };\n  const [location, setLocation] = useState({\n    lat: 37.557140718019674,\n    // 기본 위도 (서버로부터 받아오기 전 기본값)\n    lng: 127.07944948917951 // 기본 경도 (서버로부터 받아오기 전 기본값)\n  });\n  useEffect(() => {\n    // 서버로부터 위치 데이터 받아오기\n    const fetchLocationData = async () => {\n      try {\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\n          method: 'GET',\n          headers: {\n            'X-M2M-Origin': 'SafePackage',\n            'X-M2M-RI': '12345',\n            'X-M2M-RVI': '3',\n            'Content-Type': 'application/json',\n            'Accept': 'application/json'\n          }\n        });\n        if (response.ok) {\n          const data = await response.json();\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\n            const locationData = JSON.parse(data['m2m:cin'].con);\n            setLocation({\n              lat: parseFloat(locationData.latitude),\n              lng: parseFloat(locationData.longitude)\n            });\n          }\n        } else {\n          console.error('Failed to fetch location data');\n        }\n      } catch (error) {\n        console.error('Error fetching location:', error);\n      }\n    };\n    fetchLocationData();\n  }, []); // 위치가 처음 렌더링될 때만 fetch\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"map-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBC30\\uC1A1 \\uC704\\uCE58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Map, {\n        center: {\n          lat: location.lat,\n          lng: location.lng\n        } // 서버로 받은 lat, lng\n        ,\n        level: 3 // 지도 확대 레벨\n        ,\n        style: containerStyle,\n        appKey: \"27def025665d22e2a866f398cfb7a3aa\" // 카카오 API 키\n        ,\n        children: [/*#__PURE__*/_jsxDEV(MapMarker, {\n          position: {\n            lat: location.lat,\n            lng: location.lng\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uB370\\uC774\\uD130 \\uC2DC\\uAC01\\uD654\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DataGraph, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"+0ZgCc4ALVnXFJf9qGddFoTZ+jM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useEffect","useState","Map","MapMarker","DataGraph","jsxDEV","_jsxDEV","Dashboard","_s","containerStyle","width","height","location","setLocation","lat","lng","fetchLocationData","response","fetch","method","headers","ok","data","json","con","locationData","JSON","parse","parseFloat","latitude","longitude","console","error","className","children","fileName","_jsxFileName","lineNumber","columnNumber","center","level","style","appKey","position","_c","$RefreshReg$"],"sources":["/home/cosmos/PPP/iot/src/components/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Map, MapMarker } from \"react-kakao-maps-sdk\"; // MapMarker로 변경\r\nimport DataGraph from './DataGraph';\r\n\r\nfunction Dashboard() {\r\n  const containerStyle = {\r\n    width: '100%', // 크기 수정\r\n    height: '600px',\r\n  };\r\n\r\n  const [location, setLocation] = useState({\r\n    lat:  37.557140718019674, // 기본 위도 (서버로부터 받아오기 전 기본값)\r\n    lng:  127.07944948917951 , // 기본 경도 (서버로부터 받아오기 전 기본값)\r\n  });\r\n\r\n  useEffect(() => {\r\n    // 서버로부터 위치 데이터 받아오기\r\n    const fetchLocationData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8080/cse-in/SafePackage/location/la', {\r\n          method: 'GET',\r\n          headers: {\r\n            'X-M2M-Origin': 'SafePackage',\r\n            'X-M2M-RI': '12345',\r\n            'X-M2M-RVI': '3',\r\n            'Content-Type': 'application/json',\r\n            'Accept': 'application/json',\r\n          },\r\n        });\r\n\r\n        if (response.ok) {\r\n          const data = await response.json();\r\n          if (data && data['m2m:cin'] && data['m2m:cin'].con) {\r\n            const locationData = JSON.parse(data['m2m:cin'].con);\r\n            setLocation({\r\n              lat: parseFloat(locationData.latitude),\r\n              lng: parseFloat(locationData.longitude),\r\n            });\r\n          }\r\n        } else {\r\n          console.error('Failed to fetch location data');\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching location:', error);\r\n      }\r\n    };\r\n\r\n    fetchLocationData();\r\n  }, []); // 위치가 처음 렌더링될 때만 fetch\r\n\r\n  return (\r\n    <div className=\"dashboard-container\">\r\n      <div className=\"map-section\">\r\n        <h2>배송 위치</h2>\r\n        <Map\r\n          center={{ lat: location.lat, lng: location.lng }} // 서버로 받은 lat, lng\r\n          level={3} // 지도 확대 레벨\r\n          style={containerStyle}\r\n          appKey=\"27def025665d22e2a866f398cfb7a3aa\" // 카카오 API 키\r\n        >\r\n          <MapMarker position={{ lat: location.lat, lng: location.lng }} /> {/* MapMarker로 변경 */}\r\n        </Map>\r\n      </div>\r\n      <div className=\"data-section\">\r\n        <h2>데이터 시각화</h2>\r\n        <DataGraph />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Dashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}