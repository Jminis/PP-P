{"ast":null,"code":"var _jsxFileName = \"/root/PP-P/PP-P/DEMO/test_frontend/src/Dashboard.js\";\nimport React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport MapView from './components/MapView';\nconst Dashboard = () => {\n  const [sensorData, setSensorData] = useState({\n    shock: '',\n    temperature: '',\n    opend: ''\n  });\n  const [deliveryInfo, setDeliveryInfo] = useState({\n    destination: '',\n    receiver: '',\n    sender: ''\n  });\n  const [timeline, setTimeline] = useState([]);\n  const socketRef = useRef(null);\n\n  // 소켓 연결 및 알림 처리\n  useEffect(() => {\n    socketRef.current = io('http://127.0.0.1:5000', {\n      transports: ['websocket'],\n      // WebSocket 사용 강제\n      reconnectionAttempts: 5 // 재연결 시도 횟수\n    });\n\n    // 소켓 연결 성공\n    socketRef.current.on('connect', () => {\n      console.log('Connected to server');\n    });\n\n    // 알림 이벤트 수신\n    socketRef.current.on('notification', data => {\n      console.log('Received notification:', data);\n      alert(`New Notification: ${data.con}`); // 알림창에 'con' 값 표시\n    });\n\n    // 연결 오류 처리\n    socketRef.current.on('connect_error', err => {\n      console.error('Connection error:', err);\n    });\n\n    // 컴포넌트 언마운트 시 소켓 정리\n    return () => {\n      if (socketRef.current) {\n        socketRef.current.disconnect();\n        console.log('Disconnected from server');\n      }\n    };\n  }, []);\n\n  // Fetch All Data\n  const fetchAllData = async () => {\n    console.log('Fetching all data...');\n    try {\n      // Fetch Delivery Info\n      /*\n                  const deliveryResponse = await fetch('http://127.0.0.1:8000/bbbb', {\n                      method: 'POST',\n                      headers: { 'Content-Type': 'application/json' },\n                  });\n                  const deliveryJson = await deliveryResponse.json();\n                  setDeliveryInfo(deliveryJson);\n      */\n      // Fetch Shock Data\n      const shockResponse = await fetch('http://127.0.0.1:8080/cse-in/SafePackage2/shock/la', {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n          'X-M2M-Origin': 'SafePackage2',\n          'X-M2M-RI': 'req12345',\n          'X-M2M-RVI': '3'\n        }\n      });\n      if (shockResponse.ok) {\n        var _shockJson$m2mCin;\n        const shockJson = await shockResponse.json();\n        console.log('Shock data JSON:', shockJson);\n        const shockValue = (shockJson === null || shockJson === void 0 ? void 0 : (_shockJson$m2mCin = shockJson['m2m:cin']) === null || _shockJson$m2mCin === void 0 ? void 0 : _shockJson$m2mCin['con']) || 'No data';\n        setSensorData(prevData => ({\n          ...prevData,\n          shock: shockValue\n        }));\n      } else {\n        console.error('Error fetching shock data:', shockResponse.status);\n        setSensorData(prevData => ({\n          ...prevData,\n          shock: 'Error'\n        }));\n      }\n\n      // Fetch Timeline Data\n      const timelineResponse = await fetch('http://127.0.0.1:8000/cccc', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const timelineJson = await timelineResponse.json();\n      setTimeline(timelineJson);\n    } catch (error) {\n      console.error('Error fetching data:', error);\n    }\n  };\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"dashboard\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"left-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 17\n    }\n  }, \"Real-Time Location\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"location-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 21\n    }\n  }, \"Latitude: --\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 21\n    }\n  }, \"Longitude: --\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 21\n    }\n  }, \"Status: Updating...\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"right-panel\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }\n  }, \"Delivery Information\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"delivery-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 24\n    }\n  }, \"Destination:\"), \" \", deliveryInfo.destination || 'Loading...'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 24\n    }\n  }, \"Receiver:\"), \" \", deliveryInfo.receiver || 'Loading...'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 24\n    }\n  }, \"Sender:\"), \" \", deliveryInfo.sender || 'Loading...')), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, \"Sensor Data\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"sensor-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 24\n    }\n  }, \"Shock:\"), \" \", sensorData.shock || 'Loading...'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 24\n    }\n  }, \"Temperature:\"), \" \", sensorData.temperature || 'Loading...'), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 24\n    }\n  }, \"Opend:\"), \" \", sensorData.opend || 'Loading...')), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }, \"Timeline\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"timeline-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 17\n    }\n  }, timeline.length > 0 ? /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, timeline.map((event, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 40\n    }\n  }, \"Time:\"), \" \", event.time), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"strong\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 40\n    }\n  }, \"Description:\"), \" \", event.description)))) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 25\n    }\n  }, \"Loading timeline...\")), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: fetchAllData,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 17\n    }\n  }, \"Fetch All Data\")));\n};\nconst [location, setLocation] = useState({\n  latitude: 37.5665,\n  longitude: 126.9780\n});\n\n// 위치 정보 Fetch 함수\nconst fetchLocation = async () => {\n  try {\n    const response = await fetch('http://127.0.0.1:8080/cse-in/SafePackage2/location/la', {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json',\n        'X-M2M-Origin': 'SafePackage2',\n        'X-M2M-RI': 'req12345',\n        'X-M2M-RVI': '3'\n      }\n    });\n    if (response.ok) {\n      const data = await response.json();\n      const locationData = data['m2m:cin']['con'];\n      const [latitude, longitude] = locationData.split(',').map(parseFloat);\n      setLocation({\n        latitude,\n        longitude\n      });\n    } else {\n      console.error('Failed to fetch location');\n    }\n  } catch (error) {\n    console.error('Error fetching location:', error);\n  }\n};\n\n// Fetch Location 버튼\n/*#__PURE__*/React.createElement(\"button\", {\n  onClick: fetchLocation,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 1\n  }\n}, \"Update Location\");\n\n// 위치 정보 표시\n/*#__PURE__*/React.createElement(MapView, {\n  latitude: location.latitude,\n  longitude: location.longitude,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 171,\n    columnNumber: 1\n  }\n});\nimport { Link } from 'react-router-dom';\n\n// 도어락 페이지 링크\n/*#__PURE__*/React.createElement(Link, {\n  to: \"/doorlock\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 176,\n    columnNumber: 1\n  }\n}, \"Go to Door Lock Control\");\nexport default Dashboard;","map":{"version":3,"names":["React","useEffect","useState","useRef","io","MapView","Dashboard","sensorData","setSensorData","shock","temperature","opend","deliveryInfo","setDeliveryInfo","destination","receiver","sender","timeline","setTimeline","socketRef","current","transports","reconnectionAttempts","on","console","log","data","alert","con","err","error","disconnect","fetchAllData","shockResponse","fetch","method","headers","ok","_shockJson$m2mCin","shockJson","json","shockValue","prevData","status","timelineResponse","timelineJson","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","length","map","event","index","key","time","description","onClick","location","setLocation","latitude","longitude","fetchLocation","response","locationData","split","parseFloat","Link","to"],"sources":["/root/PP-P/PP-P/DEMO/test_frontend/src/Dashboard.js"],"sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\nimport { io } from 'socket.io-client';\nimport './App.css';\nimport MapView from './components/MapView';\n\nconst Dashboard = () => {\n    const [sensorData, setSensorData] = useState({ shock: '', temperature: '', opend: '' });\n    const [deliveryInfo, setDeliveryInfo] = useState({ destination: '', receiver: '', sender: '' });\n    const [timeline, setTimeline] = useState([]);\n    const socketRef = useRef(null);\n\n    // 소켓 연결 및 알림 처리\n    useEffect(() => {\n        socketRef.current = io('http://127.0.0.1:5000', {\n            transports: ['websocket'], // WebSocket 사용 강제\n            reconnectionAttempts: 5, // 재연결 시도 횟수\n        });\n\n        // 소켓 연결 성공\n        socketRef.current.on('connect', () => {\n            console.log('Connected to server');\n        });\n\n        // 알림 이벤트 수신\n        socketRef.current.on('notification', (data) => {\n            console.log('Received notification:', data);\n            alert(`New Notification: ${data.con}`); // 알림창에 'con' 값 표시\n        });\n\n        // 연결 오류 처리\n        socketRef.current.on('connect_error', (err) => {\n            console.error('Connection error:', err);\n        });\n\n        // 컴포넌트 언마운트 시 소켓 정리\n        return () => {\n            if (socketRef.current) {\n                socketRef.current.disconnect();\n                console.log('Disconnected from server');\n            }\n        };\n    }, []);\n\n    // Fetch All Data\n    const fetchAllData = async () => {\n        console.log('Fetching all data...');\n        try {\n            // Fetch Delivery Info\n/*\n            const deliveryResponse = await fetch('http://127.0.0.1:8000/bbbb', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n            });\n            const deliveryJson = await deliveryResponse.json();\n            setDeliveryInfo(deliveryJson);\n*/\n            // Fetch Shock Data\n            const shockResponse = await fetch('http://127.0.0.1:8080/cse-in/SafePackage2/shock/la', {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'X-M2M-Origin': 'SafePackage2',\n                    'X-M2M-RI': 'req12345',\n                    'X-M2M-RVI': '3',\n                },\n            });\n\n            if (shockResponse.ok) {\n                const shockJson = await shockResponse.json();\n                console.log('Shock data JSON:', shockJson);\n                const shockValue = shockJson?.['m2m:cin']?.['con'] || 'No data';\n                setSensorData((prevData) => ({ ...prevData, shock: shockValue }));\n            } else {\n                console.error('Error fetching shock data:', shockResponse.status);\n                setSensorData((prevData) => ({ ...prevData, shock: 'Error' }));\n            }\n\n            // Fetch Timeline Data\n            const timelineResponse = await fetch('http://127.0.0.1:8000/cccc', {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n            });\n            const timelineJson = await timelineResponse.json();\n            setTimeline(timelineJson);\n        } catch (error) {\n            console.error('Error fetching data:', error);\n        }\n    };\n\n    return (\n        <div className=\"dashboard\">\n            {/* 왼쪽 패널: 실시간 위치 정보 */}\n            <div className=\"left-panel\">\n                <h2>Real-Time Location</h2>\n                <div className=\"location-box\">\n                    <p>Latitude: --</p>\n                    <p>Longitude: --</p>\n                    <p>Status: Updating...</p>\n                </div>\n            </div>\n\n            {/* 오른쪽 패널: 배송 정보, 센서 데이터, 타임라인 */}\n            <div className=\"right-panel\">\n                <h2>Delivery Information</h2>\n                <div className=\"delivery-box\">\n                    <p><strong>Destination:</strong> {deliveryInfo.destination || 'Loading...'}</p>\n                    <p><strong>Receiver:</strong> {deliveryInfo.receiver || 'Loading...'}</p>\n                    <p><strong>Sender:</strong> {deliveryInfo.sender || 'Loading...'}</p>\n                </div>\n\n                <h2>Sensor Data</h2>\n                <div className=\"sensor-box\">\n                    <p><strong>Shock:</strong> {sensorData.shock || 'Loading...'}</p>\n                    <p><strong>Temperature:</strong> {sensorData.temperature || 'Loading...'}</p>\n                    <p><strong>Opend:</strong> {sensorData.opend || 'Loading...'}</p>\n                </div>\n\n                <h2>Timeline</h2>\n                <div className=\"timeline-box\">\n                    {timeline.length > 0 ? (\n                        <ul>\n                            {timeline.map((event, index) => (\n                                <li key={index}>\n                                    <p><strong>Time:</strong> {event.time}</p>\n                                    <p><strong>Description:</strong> {event.description}</p>\n                                </li>\n                            ))}\n                        </ul>\n                    ) : (\n                        <p>Loading timeline...</p>\n                    )}\n                </div>\n\n                <button onClick={fetchAllData}>Fetch All Data</button>\n            </div>\n        </div>\n    );\n};\n\nconst [location, setLocation] = useState({ latitude: 37.5665, longitude: 126.9780 });\n\n// 위치 정보 Fetch 함수\nconst fetchLocation = async () => {\n    try {\n        const response = await fetch('http://127.0.0.1:8080/cse-in/SafePackage2/location/la', {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'X-M2M-Origin': 'SafePackage2',\n                'X-M2M-RI': 'req12345',\n                'X-M2M-RVI': '3',\n            },\n        });\n        if (response.ok) {\n            const data = await response.json();\n            const locationData = data['m2m:cin']['con'];\n            const [latitude, longitude] = locationData.split(',').map(parseFloat);\n            setLocation({ latitude, longitude });\n        } else {\n            console.error('Failed to fetch location');\n        }\n    } catch (error) {\n        console.error('Error fetching location:', error);\n    }\n};\n\n// Fetch Location 버튼\n<button onClick={fetchLocation}>Update Location</button>;\n\n// 위치 정보 표시\n<MapView latitude={location.latitude} longitude={location.longitude} />\n\nimport { Link } from 'react-router-dom';\n\n// 도어락 페이지 링크\n<Link to=\"/doorlock\">Go to Door Lock Control</Link>\n\n\nexport default Dashboard;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}